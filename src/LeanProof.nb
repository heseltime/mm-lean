(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    133804,       2940]
NotebookOptionsPosition[    132383,       2910]
NotebookOutlinePosition[    132717,       2925]
CellTagsIndexPosition[    132674,       2922]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Replace", " ", "your", " ", "Lean", " ", "executable", " ", "here"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7807986339734097`*^9, 
  3.780798659055052*^9}},ExpressionUUID->"162b0d4a-2c45-4677-8210-\
902b773d4ccd"],

Cell[BoxData[
 RowBox[{"LeanExecutable", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$HomeDirectory", ",", "\"\<.elan/bin/lean\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.784621981045166*^9, 3.7846219832293653`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"90b5dffd-6085-4ae5-a8b1-fb46c820ea5c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Set", " ", "the", " ", "working", " ", "directory", " ", "to", " ", "be", 
   " ", 
   RowBox[{
    RowBox[{"mm_lean", "/", "src"}], "/"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.780798584145817*^9, 
  3.780798615721925*^9}},ExpressionUUID->"6677c453-64a6-4f46-98c5-\
59de4101cd22"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\<...lean/mm-lean/src\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780798313465518*^9, 3.78079831397092*^9}, {
  3.7807983625464783`*^9, 3.780798367263343*^9}, {3.780799267268783*^9, 
  3.780799277078808*^9}, {3.784622011530985*^9, 3.784622029976153*^9}, {
  3.784622075207736*^9, 3.7846220844268503`*^9}, {3.784631873824744*^9, 
  3.784631936612627*^9}, {3.7846320050813093`*^9, 3.784632005876857*^9}},
 NumberMarks->False,ExpressionUUID->"0e600f33-c4d8-43ae-953b-4166b2dbe04e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"<<", "\"\<main.m\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.780798944793867*^9, 3.780798948713229*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"3d3c020a-c399-4ac9-850b-6a200b89dac3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"LeanMode", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7292107682061567`*^9, 3.729210792176735*^9}, {
  3.7292110654894447`*^9, 3.7292110857282057`*^9}, {3.7292113499000683`*^9, 
  3.729211383420169*^9}, {3.7292114729156637`*^9, 3.729211545179541*^9}, {
  3.729211607492135*^9, 3.729211641382194*^9}, {3.729212573292335*^9, 
  3.7292125792009478`*^9}, {3.7292131279450006`*^9, 3.7292131664852962`*^9}, {
  3.729243934659246*^9, 3.7292439394021187`*^9}, {3.780798970625388*^9, 
  3.780798971363224*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"bff7d237-7b23-4503-8ea8-a38367ef8b1f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProcessObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"lean\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["18272", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"lean\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["18272", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["18027", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"User: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"minchao\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/minchao/.elan/toolchains/3.4.2/bin/lean\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.722688`", "\"MB\"", "megabytes", "\"Megabytes\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"\"Wed 25 Dec 2019 02:48:24\"", 
                    StyleBox[
                    RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                    FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2019", ",", "12", ",", "25", ",", "2", ",", "48", ",", 
                    "24.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                     ",", "1.`"}], "]"}]}, "DateObject", Editable -> False], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", 
                    RowBox[{"\[ThinSpace]", "\"s\""}], "seconds", 
                    RowBox[{"{", "\"Seconds\"", "}"}]}, "QuantityMixedUnit1"],
                   "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", 
                    RowBox[{"\[ThinSpace]", "\"s\""}], "seconds", 
                    RowBox[{"{", "\"Seconds\"", "}"}]}, "QuantityMixedUnit1"],
                   "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"12", "51", "2.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Hours\"", ",", "\"Minutes\"", ",", "\"Seconds\""}], 
                    "}"}]}, "QuantityMixedUnit3"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProcessObject[
   Association[
   "ManagedProcess" -> True, "UID" -> 1, "PID" -> 18272, "PPID" -> 18027, 
    "Program" -> "lean", "Path" -> "/home/minchao/.elan/bin/lean", "User" -> 
    "minchao", "StartTime" -> 1577238504]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.780796897520381*^9, 3.780797607539846*^9, 3.780797865981614*^9, 
   3.780798018701892*^9, {3.7807983937798433`*^9, 3.780798408662017*^9}, 
   3.780798972616932*^9, 3.78462210516835*^9, 3.7846317353580303`*^9, 
   3.78463196699547*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"8e1d0e40-bf40-46a5-a57d-d30c83cfb580"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProcessStatus", "[", "p", "]"}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"a09aad19-bd35-49e2-b90b-28d31c8cc39d"],

Cell[BoxData["\<\"Running\"\>"], "Output",
 CellChangeTimes->{3.7807917207592373`*^9, 3.7807964393692293`*^9, 
  3.780796538283403*^9, 3.7807966750237923`*^9, 3.780796903767123*^9, 
  3.7807976101232347`*^9, 3.780797867648875*^9, 3.780798979079939*^9, 
  3.784622107054925*^9, 3.784631730676196*^9, 3.78463197177353*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"1592e036-3185-473a-9931-f3692791423c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"p", ",", "\"\<exists_rat_lt\>\""}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQPffri/me2m8c6y78WgCimTuurgHRh5aorgXRtxim
bQTR57TPgOl7PhNlfYD0rqKlYFpNoNEORFsIyjiCaMkbWz1B9JMF+j4g+ph6
aiyIfvH2AJi+F9afBqKNJr3NBNF53+XKQXTf9Qk1YPUu9dNAdPqOzbNB9Fr/
lC0getEnv20g+jN/5kkQPUto/SkQ7dK75yeI/jj/xR8QvSZNmssXSNerHOIG
0avcHjuA6Efyy5xA9Lan55hnGL1xXNcQwAKioyR3bp8DpOvELx0E0UzSD46C
6F2cb8C0hVHtNRA9n6UTTAMA0FWSUQ==
  "],
 CellLabel->"In[29]:=",ExpressionUUID->"6eaa36ad-102d-410f-941e-29b4e97398c5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] {\[Alpha] : Type u_1} [_inst_1 : \
linear_ordered_field \[Alpha]] [_inst_2 : archimedean \[Alpha]] (x : \
\[Alpha]), \[Exists] (q : \:211a), \[UpArrow]q < x\"\>"},
    {"ID", "23"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"\[Alpha] : Type u_1\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] [_inst_1 : linear_ordered_field \
\[Alpha]] [_inst_2 : archimedean \[Alpha]] (x : \[Alpha]), \[Exists] (q : \
\:211a), \[UpArrow]q < x\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"_inst_1 : linear_ordered_field \[Alpha]\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] [_inst_2 : archimedean \[Alpha]] \
(x : \[Alpha]), \[Exists] (q : \:211a), \[UpArrow]q < x\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"_inst_2 : archimedean \[Alpha]\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (x : \[Alpha]), \[Exists] (q : \
\:211a), \[UpArrow]q < x\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x : \[Alpha]\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (q : \:211a), \[UpArrow]q < x\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(\[Exists] (n : \:2124), \[UpArrow]n < x) \
\[RightArrow] (\[Exists] (q : \:211a), \[UpArrow]q < x)\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"_a : \[Exists] (n : \:2124), \[UpArrow]n < x\
\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (q : \:211a), \[UpArrow]q < x\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"Exists.dcases_on\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"_a : \[Exists] (n : \:2124), \[UpArrow]n < x\
\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (w : \:2124), \[UpArrow]w < x \
\[RightArrow] (\[Exists] (q : \:211a), \[UpArrow]q < x)\"\>"},
                    {"ID", "15"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[UpArrow]w < x \[RightArrow] (\[Exists] (q \
: \:211a), \[UpArrow]q < x)\"\>"},
                    {"ID", "14"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : \[UpArrow]w < x\"\>"},
                    {"ID", "6"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (q : \:211a), \[UpArrow]q < x\"\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"id_rhs\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (q : \:211a), \[UpArrow]q < x\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[UpArrow]\[UpArrow]w < x\"\>"},
                    {"ID", "11"},
                    {"Rule", "\<\"eq.mpr\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < \
x)\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"id\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < \
x)\"\>"},
                    {"ID", "9"},
                    {"Rule", "\<\"eq.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\
\[UpArrow]w < x)\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"eq.refl\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[UpArrow]\[UpArrow]w = \[UpArrow]w\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"rat.cast_coe_int\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : \[UpArrow]w < x\"\>"},
                    {"ID", "6"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 
                    6}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                  },
                  DefaultBaseStyle->"Column",
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 "Column"],
                ImageMargins->0]}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxBackground->{"Columns" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
            Dynamic[Typeset`var$$],
            Alignment->Automatic,
            BaseStyle->{},
            BaselinePosition->Baseline,
            DefaultBaseStyle->"OpenerView",
            ImageMargins->0,
            ImageSize->Automatic],
           Deployed->False,
           StripOnInput->False],
          OpenerView[{$CellContext`Arguments, 
            Column[{
              
              Grid[{{$CellContext`Goal, 
                 "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                Rule, $CellContext`Assumption}}, Background -> {{
                  RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
              
              Grid[{{$CellContext`Goal, 
                 "\[Exists] (q : \:211a), \[UpArrow]q < x"}, {$CellContext`ID,
                  13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                 OpenerView[{$CellContext`Arguments, 
                   Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
               Background -> {{
                  RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
         DynamicModuleValues:>Automatic],
        Setting[#, {0}]& ]}
     },
     AutoDelete->False,
     GridBoxBackground->{"Columns" -> {
         RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}
 },
 DefaultBaseStyle->"Column",
 GridBoxAlignment->{"Columns" -> {{Left}}},
 GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "\[UpArrow]w < x \[RightArrow] (\[Exists] (q : \:211a), \[UpArrow]q < \
x)"}, {$CellContext`ID, 14}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "h : \[UpArrow]w < x"}, {$CellContext`ID,
               6}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (q : \:211a), \[UpArrow]q < x"}, {$CellContext`ID, 
              13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, {$CellContext`ID, 
       4}, {Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] (w : \:2124), \[UpArrow]w < x \[RightArrow] (\[Exists] (q : \
\:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 15}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "\[UpArrow]w < x \[RightArrow] (\[Exists] (q : \:211a), \
\[UpArrow]q < x)"}, {$CellContext`ID, 14}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, {$CellContext`ID, 
       4}, {Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (q : \:211a), \[UpArrow]q < x"}, {$CellContext`ID, 16}, {
      Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (w : \:2124), \[UpArrow]w < x \[RightArrow] (\
\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 15}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "\[UpArrow]w < x \[RightArrow] (\[Exists] (q : \:211a), \
\[UpArrow]q < x)"}, {$CellContext`ID, 14}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]},
{
 TagBox[GridBox[{
    {"Goal", "\<\"\[Exists] (n : \:2124), \[UpArrow]n < x\"\>"},
    {"ID", "18"},
    {"Rule", "\<\"exists_int_lt\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"_inst_2 : archimedean \[Alpha]\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Arguments, 
          Column[{
            
            Grid[{{$CellContext`Goal, 
               "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
              Rule, $CellContext`Assumption}}, Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
       DynamicModuleValues:>Automatic],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "(\[Exists] (n : \:2124), \[UpArrow]n < x) \[RightArrow] (\[Exists] (q \
: \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 17}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (q : \:211a), \[UpArrow]q < x"}, {$CellContext`ID, 
              16}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : \:2124), \[UpArrow]w < x \[RightArrow] (\
\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 15}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]w < x \[RightArrow] (\[Exists] (q : \:211a), \
\[UpArrow]q < x)"}, {$CellContext`ID, 14}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (n : \:2124), \[UpArrow]n < x"}, {$CellContext`ID, 18}, {
      Rule, "exists_int_lt"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "x : \[Alpha]"}, {$CellContext`ID, 3}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (q : \:211a), \[UpArrow]q < x"}, {$CellContext`ID, 19}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "(\[Exists] (n : \:2124), \[UpArrow]n < x) \[RightArrow] (\
\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 17}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 16}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : \:2124), \[UpArrow]w < x \[RightArrow] (\
\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 15}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]w < x \[RightArrow] (\[Exists] (q : \:211a), \
\[UpArrow]q < x)"}, {$CellContext`ID, 14}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (n : \:2124), \[UpArrow]n < x"}, {$CellContext`ID, 
              18}, {Rule, "exists_int_lt"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] (x : \[Alpha]), \[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "x : \[Alpha]"}, {$CellContext`ID, 3}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (q : \:211a), \[UpArrow]q < x"}, {$CellContext`ID, 
              19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(\[Exists] (n : \:2124), \[UpArrow]n < x) \[RightArrow] \
(\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 17}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 16}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : \:2124), \[UpArrow]w < x \[RightArrow] (\
\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 15}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]w < x \[RightArrow] (\[Exists] (q : \:211a), \
\[UpArrow]q < x)"}, {$CellContext`ID, 14}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 
                    6}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 18}, {Rule, "exists_int_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "_inst_1 : linear_ordered_field \[Alpha]"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] [_inst_2 : archimedean \[Alpha]] (x : \[Alpha]), \[Exists] \
(q : \:211a), \[UpArrow]q < x"}, {$CellContext`ID, 21}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (x : \[Alpha]), \[Exists] (q : \:211a), \[UpArrow]q \
< x"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, "x : \[Alpha]"}, {$CellContext`ID,
                     3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[Exists] (n : \:2124), \[UpArrow]n < x) \[RightArrow] \
(\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 17}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 16}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : \:2124), \[UpArrow]w < x \[RightArrow] (\
\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 15}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]w < x \[RightArrow] (\[Exists] (q : \:211a), \
\[UpArrow]q < x)"}, {$CellContext`ID, 14}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 11}, {
                    Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 
                    6}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 18}, {Rule, "exists_int_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "\[Alpha] : Type u_1"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] [_inst_1 : linear_ordered_field \[Alpha]] [_inst_2 : \
archimedean \[Alpha]] (x : \[Alpha]), \[Exists] (q : \:211a), \[UpArrow]q < \
x"}, {$CellContext`ID, 22}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "_inst_1 : linear_ordered_field \[Alpha]"}, {$CellContext`ID, 
              1}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] [_inst_2 : archimedean \[Alpha]] (x : \[Alpha]), \
\[Exists] (q : \:211a), \[UpArrow]q < x"}, {$CellContext`ID, 21}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (x : \[Alpha]), \[Exists] (q : \:211a), \
\[UpArrow]q < x"}, {$CellContext`ID, 20}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x : \[Alpha]"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[Exists] (n : \:2124), \[UpArrow]n < x) \[RightArrow] \
(\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 17}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 16}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : \[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : \:2124), \[UpArrow]w < x \[RightArrow] (\
\[Exists] (q : \:211a), \[UpArrow]q < x)"}, {$CellContext`ID, 15}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]w < x \[RightArrow] (\[Exists] (q : \:211a), \
\[UpArrow]q < x)"}, {$CellContext`ID, 14}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 6}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 13}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (q : \:211a), \[UpArrow]q < x"}, \
{$CellContext`ID, 12}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x"}, {$CellContext`ID, 
                    11}, {Rule, "eq.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 10}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]w < x)"}, \
{$CellContext`ID, 9}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[UpArrow]\[UpArrow]w < x = (\[UpArrow]\[UpArrow]w < \
x)"}, {$CellContext`ID, 7}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[UpArrow]\[UpArrow]w = \[UpArrow]w"}, {$CellContext`ID, 
                    8}, {Rule, "rat.cast_coe_int"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[UpArrow]w < x"}, {$CellContext`ID, 
                    6}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (n : \:2124), \[UpArrow]n < x"}, \
{$CellContext`ID, 18}, {Rule, "exists_int_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_inst_2 : archimedean \[Alpha]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{{3.7807916597797203`*^9, 3.7807916691198378`*^9}, 
   3.7807917498112288`*^9, 3.780791780923945*^9, 3.780796441661479*^9, 
   3.780796677791892*^9, {3.7807969085612993`*^9, 3.780796937488648*^9}, {
   3.7807970063847*^9, 3.7807970263307447`*^9}, {3.780797240058187*^9, 
   3.7807972639969254`*^9}, 3.780797372830616*^9, 3.7807974133872547`*^9, {
   3.780797613875301*^9, 3.780797662251729*^9}, {3.780797870589881*^9, 
   3.7807978750686827`*^9}, {3.7807980245060797`*^9, 3.780798048667407*^9}, {
   3.780798419864346*^9, 3.780798452727729*^9}, {3.780798484147225*^9, 
   3.780798497250298*^9}, {3.780798553270048*^9, 3.780798558770639*^9}, {
   3.780798985523655*^9, 3.780798998364105*^9}, {3.784631731954051*^9, 
   3.784631857834834*^9}, {3.784631977690637*^9, 3.784631989493148*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"3dc37477-c036-47c7-b005-7e49dc1af2bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"QuitLeanMode", "[", "p", "]"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"74feae36-5665-4e87-ae08-27945938bd89"]
},
WindowSize->{2420, 1311},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 262, 7, 34, "Input",ExpressionUUID->"162b0d4a-2c45-4677-8210-902b773d4ccd"],
Cell[823, 29, 334, 7, 34, "Input",ExpressionUUID->"90b5dffd-6085-4ae5-a8b1-fb46c820ea5c"],
Cell[1160, 38, 329, 9, 34, "Input",ExpressionUUID->"6677c453-64a6-4f46-98c5-59de4101cd22"],
Cell[1492, 49, 526, 7, 34, "Input",ExpressionUUID->"0e600f33-c4d8-43ae-953b-4166b2dbe04e"],
Cell[2021, 58, 221, 4, 34, "Input",ExpressionUUID->"3d3c020a-c399-4ac9-850b-6a200b89dac3"],
Cell[CellGroupData[{
Cell[2267, 66, 628, 10, 34, "Input",ExpressionUUID->"bff7d237-7b23-4503-8ea8-a38367ef8b1f"],
Cell[2898, 78, 7750, 166, 71, "Output",ExpressionUUID->"8e1d0e40-bf40-46a5-a57d-d30c83cfb580"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10685, 249, 145, 2, 34, "Input",ExpressionUUID->"a09aad19-bd35-49e2-b90b-28d31c8cc39d"],
Cell[10833, 253, 399, 5, 38, "Output",ExpressionUUID->"1592e036-3185-473a-9931-f3692791423c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11269, 263, 568, 11, 34, "Input",ExpressionUUID->"6eaa36ad-102d-410f-941e-29b4e97398c5"],
Cell[11840, 276, 120380, 2627, 111, "Output",ExpressionUUID->"3dc37477-c036-47c7-b005-7e49dc1af2bf"]
}, Open  ]],
Cell[132235, 2906, 144, 2, 34, "Input",ExpressionUUID->"74feae36-5665-4e87-ae08-27945938bd89"]
}
]
*)

