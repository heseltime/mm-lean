(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    985972,      20969]
NotebookOptionsPosition[    982024,      20897]
NotebookOutlinePosition[    982358,      20912]
CellTagsIndexPosition[    982315,      20909]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Replace", " ", "your", " ", "Lean", " ", "executable", " ", "here"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7807986339734097`*^9, 
  3.780798659055052*^9}},ExpressionUUID->"162b0d4a-2c45-4677-8210-\
902b773d4ccd"],

Cell[BoxData[
 RowBox[{"LeanExecutable", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$HomeDirectory", ",", "\"\<.elan/bin/lean\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.784621981045166*^9, 3.7846219832293653`*^9}, 
   3.8051773381703367`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"90b5dffd-6085-4ae5-a8b1-fb46c820ea5c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Set", " ", "the", " ", "working", " ", "directory", " ", "to", " ", "be", 
   " ", 
   RowBox[{
    RowBox[{"mm_lean", "/", "src"}], "/"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.780798584145817*^9, 
  3.780798615721925*^9}},ExpressionUUID->"6677c453-64a6-4f46-98c5-\
59de4101cd22"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\<~/proj/lean/mm-lean/src\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.780798313465518*^9, 3.78079831397092*^9}, {
  3.7807983625464783`*^9, 3.780798367263343*^9}, {3.780799267268783*^9, 
  3.780799277078808*^9}, {3.784622011530985*^9, 3.784622029976153*^9}, {
  3.784622075207736*^9, 3.7846220844268503`*^9}, {3.784631873824744*^9, 
  3.784631936612627*^9}, {3.7846320050813093`*^9, 3.784632005876857*^9}, {
  3.8049265720036077`*^9, 3.80492658592445*^9}, {3.805173401335939*^9, 
  3.8051734086868753`*^9}, {3.805177329249885*^9, 3.805177334558298*^9}},
 NumberMarks->False,
 CellLabel->"In[2]:=",ExpressionUUID->"0e600f33-c4d8-43ae-953b-4166b2dbe04e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"<<", "\"\<main.m\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.780798944793867*^9, 3.780798948713229*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3d3c020a-c399-4ac9-850b-6a200b89dac3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Lean", "=", 
  RowBox[{"LeanMode", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7292107682061567`*^9, 3.729210792176735*^9}, {
  3.7292110654894447`*^9, 3.7292110857282057`*^9}, {3.7292113499000683`*^9, 
  3.729211383420169*^9}, {3.7292114729156637`*^9, 3.729211545179541*^9}, {
  3.729211607492135*^9, 3.729211641382194*^9}, {3.729212573292335*^9, 
  3.7292125792009478`*^9}, {3.7292131279450006`*^9, 3.7292131664852962`*^9}, {
  3.729243934659246*^9, 3.7292439394021187`*^9}, {3.780798970625388*^9, 
  3.780798971363224*^9}, {3.805179320448739*^9, 3.805179321831057*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"bff7d237-7b23-4503-8ea8-a38367ef8b1f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProcessObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"lean\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17511", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"lean\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17511", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["17292", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"User: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"minchao\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/minchao/.elan/toolchains/leanprover-community-lean-\
3.17.1/bin/lean\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "8.368128`", "\"MB\"", "megabytes", "\"Megabytes\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"\"Tue 18 Aug 2020 09:40:51\"", 
                    StyleBox[
                    RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "10.`", NumberMarks -> False, StripOnInput -> False]}], 
                    FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "8", ",", "18", ",", "9", ",", "40", ",", 
                    "51.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                     ",", "10.`"}], "]"}]}, "DateObject", Editable -> False], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", 
                    RowBox[{"\[ThinSpace]", "\"s\""}], "seconds", 
                    RowBox[{"{", "\"Seconds\"", "}"}]}, "QuantityMixedUnit1"],
                   "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", 
                    RowBox[{"\[ThinSpace]", "\"s\""}], "seconds", 
                    RowBox[{"{", "\"Seconds\"", "}"}]}, "QuantityMixedUnit1"],
                   "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"14", "37", "37.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Hours\"", ",", "\"Minutes\"", ",", "\"Seconds\""}], 
                    "}"}]}, "QuantityMixedUnit3"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProcessObject[
   Association[
   "ManagedProcess" -> True, "UID" -> 0, "PID" -> 17511, "PPID" -> 17292, 
    "Program" -> "lean", "Path" -> "/home/minchao/.elan/bin/lean", "User" -> 
    "minchao", "StartTime" -> 1597707651]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.805177347778737*^9, 3.8051791389973097`*^9, 
  3.80517926616183*^9, 3.805179362503399*^9, 3.8051794204521427`*^9, 
  3.805179927576661*^9, 3.805180047579234*^9, 3.80518013894178*^9, 
  3.8051815659010677`*^9, 3.805181897388094*^9, 3.805183098957262*^9, 
  3.805183639065048*^9, 3.805183903403364*^9, 3.805184489149942*^9, 
  3.805184743435124*^9, 3.8052730138742743`*^9, 3.805273519701531*^9, 
  3.805524899640239*^9, 3.805540554324759*^9, 3.806230192367989*^9, 
  3.806230708684225*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"d8243aed-ace5-4ed9-87a5-5ab5a4f2bfab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProcessStatus", "[", "Lean", "]"}]], "Input",
 CellChangeTimes->{{3.805179365688818*^9, 3.805179366626686*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a09aad19-bd35-49e2-b90b-28d31c8cc39d"],

Cell[BoxData["\<\"Running\"\>"], "Output",
 CellChangeTimes->{3.7807917207592373`*^9, 3.7807964393692293`*^9, 
  3.780796538283403*^9, 3.7807966750237923`*^9, 3.780796903767123*^9, 
  3.7807976101232347`*^9, 3.780797867648875*^9, 3.780798979079939*^9, 
  3.784622107054925*^9, 3.784631730676196*^9, 3.78463197177353*^9, 
  3.8049265969786386`*^9, 3.804927052181733*^9, 3.805108925899788*^9, 
  3.805172003439999*^9, 3.805177349334076*^9, 3.805179140437757*^9, 
  3.8051792690120687`*^9, 3.805179369765088*^9, 3.805179422330134*^9, 
  3.805179930130145*^9, 3.8051800487726583`*^9, 3.805180140271229*^9, 
  3.805181567002911*^9, 3.80518189872655*^9, 3.805183100324609*^9, 
  3.805183640525934*^9, 3.805184745055553*^9, 3.806230710045763*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0b3313e4-9890-46d4-9c6d-8fe2ed1094c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"Lean", ",", "\"\<nat.prime.dvd_of_dvd_pow\>\""}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdymkog3EAx/FlUuyFq5ybRc68wF7tlTxrlJphajKUZGaIiKTYTMqVbbyQ
s0lIrpFrFsWKslhSRl6YzLEyCsmZPL//i2+fN9/I0lqJ3IPBYETSwfF3lyEz
0U2pTr4nILPrbAFapmIW4SVjcAXaEo+IV6J+jojWXD9NjPXTpEK+P5uCoRfr
mfB2IkkED+LkxdD1tEu8kurKIW/gSQlrPiKaoPZc30J+oXoQKkyro3Axu2wN
Tr6KN+Cbr/IQjgQYrVDYt/0FXwyuX7hQHu6TRauOtrDgXIYzDd5wZwRw487G
HOK5qaW2HE8oC93aHKNVBZ/uQY/w631o9nYT+bxWOzR4dhOjVVUSSYGb6kiY
JboU3kXwckRO3JmTVcPlxmGiMYXTA9tZQmLKo0ML54M4Omi/7xmCJfmjxCh+
8R9kJ1cSd7kVzXm0JmkD8Tm3sBUG6tZUsCassxO+vzmJF+zHXqgXfBIbH9Jl
87ReGnEhPK1jxVlpSyllPBzwdWwe04b8fBP/AVHT/wo=
  "],
 CellLabel->"In[5]:=",ExpressionUUID->"6eaa36ad-102d-410f-941e-29b4e97398c5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] {p m n : \:2115}, nat.prime p \[RightArrow] p \
\[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
    {"ID", "24"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"p : \:2115\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {m n : \:2115}, nat.prime p \
\[RightArrow] p \[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "23"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m : \:2115\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {n : \:2115}, nat.prime p \
\[RightArrow] p \[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"nat.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ 0 \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"not.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]p \[Divides] 1\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"nat.prime.not_dvd_one\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {Rule, 
                    "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "15"},
                    {"Rule", "\<\"or.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m.pow n \[Or] p \[Divides] \
m\"\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"iff.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m.pow n * m \[LeftRightArrow] p \
\[Divides] m.pow n \[Or] p \[Divides] m\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"nat.prime.dvd_mul\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m \[RightArrow] p \[Divides] \
m\"\>"},
                    {"ID", "14"},
                    {"Rule", "\<\"id\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {Rule, 
                    "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]},
                {
                 TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "h : p \[Divides] m ^ n"}, {$CellContext`ID, 
       4}, {Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 19}, {
      Rule, "nat.rec"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 3}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 
       20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 
              19}, {Rule, "nat.rec"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 
              3}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {n : \:2115}, nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 22}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "p : \:2115"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {m n : \:2115}, nat.prime p \[RightArrow] p \[Divides] m ^ \
n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 23}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] {n : \:2115}, nat.prime p \[RightArrow] p \[Divides] \
m ^ n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 22}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 21}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{3.8051773574751883`*^9, 3.805179274157055*^9, 
  3.805179373890008*^9, 3.805179425989846*^9, 3.80517993349507*^9, 
  3.805180052260253*^9, 3.805181570345108*^9, 3.805181902058371*^9, 
  3.805183103705029*^9, 3.80518364388335*^9, 3.805273536855113*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"83cf5bec-d936-423f-bb62-692dc0da71e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"Lean", ",", "\"\<nat.prime.not_coprime_iff_dvd\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.805172154373012*^9, 3.805172177963478*^9}, {
  3.805172812220764*^9, 3.8051728195506363`*^9}, {3.8051793373744583`*^9, 
  3.8051793386168613`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3739a398-32eb-40bf-9968-8ee78a5000ed"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] {m n : \:2115}, \[Not]m.coprime n \
\[LeftRightArrow] \[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
    {"ID", "28"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"m : \:2115\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {n : \:2115}, \[Not]m.coprime n \
\[LeftRightArrow] \[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "27"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Not]m.coprime n \[LeftRightArrow] \
\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \[And] p \[Divides] \
n\"\>"},
                    {"ID", "26"},
                    {"Rule", "\<\"iff.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Not]m.coprime n \[RightArrow] (\[Exists] \
(p : \:2115), nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n)\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : \[Not]m.coprime n\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "11"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime (m.gcd n).min_fac \[And] (m.gcd \
n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \[Divides] n\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"and.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"nat.prime (m.gcd n).min_fac\"\>"},
                    {"ID", "3"},
                    {"Rule", "\<\"nat.min_fac_prime\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : \[Not]m.coprime n\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(m.gcd n).min_fac \[Divides] m \[And] (m.gcd \
n).min_fac \[Divides] n\"\>"},
                    {"ID", "9"},
                    {"Rule", "\<\"and.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(m.gcd n).min_fac \[Divides] m\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"dvd.trans\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(m.gcd n).min_fac \[Divides] m.gcd n\"\>"},
                    {"ID", "4"},
                    {"Rule", "\<\"nat.min_fac_dvd\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m.gcd n \[Divides] m\"\>"},
                    {"ID", "5"},
                    {"Rule", "\<\"nat.gcd_dvd_left\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {Rule, 
                    "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(m.gcd n).min_fac \[Divides] n\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"dvd.trans\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(m.gcd n).min_fac \[Divides] m.gcd n\"\>"},
                    {"ID", "4"},
                    {"Rule", "\<\"nat.min_fac_dvd\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m.gcd n \[Divides] n\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"nat.gcd_dvd_right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {Rule, 
                    "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 
                    6}, {Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {Rule, 
                    "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 
                    8}, {Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {Rule, 
                    "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {Rule, 
                    "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {Rule, 
                    "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {Rule, 
                    "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {Rule, 
                    "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n"}, {$CellContext`ID, 11}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {
                    Rule, "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {
                    Rule, "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                   {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(\[Exists] (p : \:2115), nat.prime p \[And] \
p \[Divides] m \[And] p \[Divides] n) \[RightArrow] \[Not]m.coprime n\"\>"},
                    {"ID", "25"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h : \[Exists] (p : \:2115), nat.prime p \
\[And] p \[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "13"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]m.coprime n\"\>"},
                    {"ID", "24"},
                    {"Rule", "\<\"Exists.dcases_on\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h : \[Exists] (p : \:2115), nat.prime p \
\[And] p \[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "13"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n\"\>"},
                    {"ID", "23"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n \[RightArrow] \[Not]m.coprime n\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"hp : nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]m.coprime n\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"nat.not_coprime_of_dvd_of_dvd\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"1 < p\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"nat.prime.one_lt\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"nat.prime p\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"and.left\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"hp : nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"and.left\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"and.right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"hp : nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] n\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"and.right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"and.right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"hp : nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, 
                    "Rows" -> {{True}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {Rule, 
                    "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {Rule, 
                    "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : \[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "\[Not]m.coprime n"}, {$CellContext`ID, 
              24}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "\[Not]m.coprime n \[RightArrow] (\[Exists] (p : \:2115), nat.prime p \
\[And] p \[Divides] m \[And] p \[Divides] n)"}, {$CellContext`ID, 12}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n"}, {$CellContext`ID, 11}, {
             Rule, "Exists.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {
                    Rule, "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {
                    Rule, "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "(\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n) \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 25}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : \[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "\[Not]m.coprime n"}, {$CellContext`ID, 
              24}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Not]m.coprime n \[LeftRightArrow] \[Exists] (p : \:2115), nat.prime \
p \[And] p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 26}, {
      Rule, "iff.intro"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "\[Not]m.coprime n \[RightArrow] (\[Exists] (p : \:2115), \
nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n)"}, {$CellContext`ID, 
              12}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n"}, {$CellContext`ID, 11}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {
                    Rule, "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {
                    Rule, "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "(\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n) \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
              25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 24}, {
                    Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {n : \:2115}, \[Not]m.coprime n \[LeftRightArrow] \[Exists] \
(p : \:2115), nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n"}, \
{$CellContext`ID, 27}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Not]m.coprime n \[LeftRightArrow] \[Exists] (p : \:2115), \
nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 
              26}, {Rule, "iff.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n \[RightArrow] (\[Exists] (p : \:2115), \
nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n)"}, {$CellContext`ID, 
                    12}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n"}, {$CellContext`ID, 11}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {
                    Rule, "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {
                    Rule, "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "(\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n) \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 24}, {
                    Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{{3.805177366525826*^9, 3.8051773742368183`*^9}, 
   3.805179376217513*^9, 3.805273539739832*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"5cbbfc68-1c30-445b-9797-bcbe67baf0bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"Lean", ",", "\"\<nat.exists_infinite_primes\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.8051722464952593`*^9, 3.805172276656609*^9}, {
  3.805172356599527*^9, 3.805172357037291*^9}, {3.8051725811124163`*^9, 
  3.805172581744677*^9}, {3.805173242262375*^9, 3.805173252998361*^9}, {
  3.805179342364896*^9, 3.8051793432380743`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5afad108-4531-4842-ad18-1537188da0e1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] (n : \:2115), \[Exists] (p : \:2115), n \
\[LessEqual] p \[And] nat.prime p\"\>"},
    {"ID", "31"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), n \[LessEqual] p \
\[And] nat.prime p\"\>"},
                    {"ID", "30"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"n.fact + 1 \[NotEqual] 1 \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)\"\>"},
                    {"ID", "26"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"f1 : n.fact + 1 \[NotEqual] 1\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), n \[LessEqual] p \
\[And] nat.prime p\"\>"},
                    {"ID", "25"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime (n.fact + 1).min_fac \[RightArrow] \
(\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)\"\>"},
                    {"ID", "23"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime (n.fact + 1).min_fac\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), n \[LessEqual] p \
\[And] nat.prime p\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"n \[LessEqual] (n.fact + 1).min_fac \
\[RightArrow] (\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)\"\
\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"np : n \[LessEqual] (n.fact + \
1).min_fac\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), n \[LessEqual] p \
\[And] nat.prime p\"\>"},
                    {"ID", "5"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"n \[LessEqual] (n.fact + 1).min_fac \[And] \
nat.prime (n.fact + 1).min_fac\"\>"},
                    {"ID", "4"},
                    {"Rule", "\<\"and.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"np : n \[LessEqual] (n.fact + \
1).min_fac\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime (n.fact + 1).min_fac\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n \[LessEqual] (n.fact + 1).min_fac\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"le_of_not_ge\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"n \[GreaterEqual] (n.fact + 1).min_fac \
\[RightArrow] false\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h : n \[GreaterEqual] (n.fact + 1).min_fac\"\
\>"},
                    {"ID", "7"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(n.fact + 1).min_fac \[Divides] n.fact \
\[RightArrow] false\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h\:2081 : (n.fact + 1).min_fac \[Divides] \
n.fact\"\>"},
                    {"ID", "8"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, 
                    "Rows" -> {{True}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "15"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(n.fact + 1).min_fac \[Divides] 1 \
\[RightArrow] false\"\>"},
                    {"ID", "11"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h\:2082 : (n.fact + 1).min_fac \[Divides] \
1\"\>"},
                    {"ID", "9"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"nat.prime.not_dvd_one\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime (n.fact + 1).min_fac\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h\:2082 : (n.fact + 1).min_fac \[Divides] \
1\"\>"},
                    {"ID", "9"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(n.fact + 1).min_fac \[Divides] 1\"\>"},
                    {"ID", "14"},
                    {"Rule", "\<\"iff.mpr\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(n.fact + 1).min_fac \[Divides] 1 \
\[LeftRightArrow] (n.fact + 1).min_fac \[Divides] n.fact + 1\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"nat.dvd_add_iff_right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h\:2081 : (n.fact + 1).min_fac \[Divides] \
n.fact\"\>"},
                    {"ID", "8"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(n.fact + 1).min_fac \[Divides] n.fact + 1\"\
\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"nat.min_fac_dvd\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(n.fact + 1).min_fac \[Divides] n.fact\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"nat.dvd_fact\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"0 < (n.fact + 1).min_fac\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"nat.min_fac_pos\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h : n \[GreaterEqual] (n.fact + 1).min_fac\"\
\>"},
                    {"ID", "7"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] false"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\[Exists] (p : \
\:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 6}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "np : n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
              3}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, 
              "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 5}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 21}, {
      Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] false"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 2}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 22}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\[Exists] \
(p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 6}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 21}, {
             Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]},
{
 TagBox[GridBox[{
    {"Goal", "\<\"nat.prime (n.fact + 1).min_fac\"\>"},
    {"ID", "24"},
    {"Rule", "\<\"nat.min_fac_prime\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"f1 : n.fact + 1 \[NotEqual] 1\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Arguments, 
          Column[{
            
            Grid[{{$CellContext`Goal, 
               "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
              Rule, $CellContext`Assumption}}, Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
       DynamicModuleValues:>Automatic],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "nat.prime (n.fact + 1).min_fac \[RightArrow] (\[Exists] (p : \:2115), \
n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 23}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 22}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, \
{$CellContext`ID, 6}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    21}, {Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 24}, {
      Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "nat.prime (n.fact + 1).min_fac \[RightArrow] (\[Exists] (p : \
\:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 23}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, \
{$CellContext`ID, 6}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    21}, {Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 24}, {
             Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]},
{
 TagBox[GridBox[{
    {"Goal", "\<\"n.fact + 1 \[NotEqual] 1\"\>"},
    {"ID", "29"},
    {"Rule", "\<\"ne_of_gt\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"1 < n.fact.succ\"\>"},
                    {"ID", "28"},
                    {"Rule", "\<\"nat.succ_lt_succ\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"0 < n.fact\"\>"},
                    {"ID", "27"},
                    {"Rule", "\<\"nat.fact_pos\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "0 < n.fact"}, {$CellContext`ID,
                     27}, {Rule, "nat.fact_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Arguments, 
          Column[{
            
            Grid[{{$CellContext`Goal, "1 < n.fact.succ"}, {$CellContext`ID, 
               28}, {Rule, "nat.succ_lt_succ"}, {$CellContext`Proofs, 
               OpenerView[{$CellContext`Arguments, 
                 Column[{
                   
                   Grid[{{$CellContext`Goal, "0 < n.fact"}, {$CellContext`ID, 
                    27}, {Rule, "nat.fact_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
             Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
       DynamicModuleValues:>Automatic],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "n.fact + 1 \[NotEqual] 1 \[RightArrow] (\[Exists] (p : \:2115), n \
\[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 26}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, 
              "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "nat.prime (n.fact + 1).min_fac \[RightArrow] (\[Exists] \
(p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 23}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, \
{$CellContext`ID, 6}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    21}, {Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    24}, {Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 
       29}, {Rule, "ne_of_gt"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "1 < n.fact.succ"}, {$CellContext`ID, 
              28}, {Rule, "nat.succ_lt_succ"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, "0 < n.fact"}, {$CellContext`ID, 
                    27}, {Rule, "nat.fact_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "n.fact + 1 \[NotEqual] 1 \[RightArrow] (\[Exists] (p : \
\:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 26}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 25}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (n.fact + 1).min_fac \[RightArrow] (\[Exists] \
(p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 23}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, \
{$CellContext`ID, 6}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    21}, {Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    24}, {Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 29}, {
             Rule, "ne_of_gt"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "1 < n.fact.succ"}, {$CellContext`ID, 28}, {
                    Rule, "nat.succ_lt_succ"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "0 < n.fact"}, {$CellContext`ID,
                     27}, {Rule, "nat.fact_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{
  3.805273545623577*^9, 3.805524906872744*^9, {3.8055406311382027`*^9, 
   3.805540638573276*^9}, 3.8055406784359713`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"798e2a43-f265-42a2-a135-d9b7dfab1865"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanInfo", "[", 
  RowBox[{"Lean", ",", " ", "\"\<nat.min_fac\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8055249092556953`*^9, 3.805524919666128*^9}, {
  3.805540597269755*^9, 3.8055405977886763`*^9}, {3.8055406422980556`*^9, 
  3.805540644126862*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"277762b0-34d1-4446-ba72-c2e499f8e50b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Category", "Definition"},
    {"Type", "\<\"\:2115 \[RightArrow] \:2115\"\>"},
    {"Description", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Documentation"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Documentation"},
            {"", 
             
             PaneBox["\<\"Returns the smallest prime factor of `n \[NotEqual] \
1`.\"\>",
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Documentation, 
          "Returns the smallest prime factor of `n \[NotEqual] 1`."}, False]],
       
       DynamicModuleValues:>{}],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.85]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.80554058715197*^9, 3.805540648431563*^9}, 
   3.805540681219324*^9, {3.8062307512503242`*^9, 3.806230752196447*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"fec74b07-381a-4bdc-9b21-008f2409cca1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanInfo", "[", 
  RowBox[{"Lean", ",", " ", "\"\<nat.exists_infinite_primes\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.806230765916827*^9, 3.806230774057991*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"7d6c7b11-bf9e-4adc-af49-3b38e73da4a2"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Category", "Theorem"},
    {"Type", "\<\"\[ForAll] (n : \:2115), \[Exists] (p : \:2115), n \
\[LessEqual] p \[And] nat.prime p\"\>"},
    {"Description", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Documentation"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Documentation"},
            {"", 
             
             PaneBox["\<\" Euclid's theorem. There exist infinitely many \
prime numbers.\\nHere given in the form: for every `n`, there exists a prime \
number `p \[GreaterEqual] n`.\"\>",
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Documentation, 
          " Euclid's theorem. There exist infinitely many prime numbers.\n\
Here given in the form: for every `n`, there exists a prime number `p \
\[GreaterEqual] n`."}, False]],
       DynamicModuleValues:>{}],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.85]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.806230777018141*^9, 3.806230782915298*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"cef51a27-603d-4261-9bf6-d926a3a90563"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"Lean", ",", "\"\<Set.singleton_inj\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8051732958249598`*^9, 3.8051732992662487`*^9}, {
  3.805179347110087*^9, 3.805179348035297*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"53c0faa5-8781-4294-8565-61bc9270e50b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] {x y : Set}, {x} = {y} \[RightArrow] x = y\"\>"},
    {"ID", "14"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"x : Set\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {y : Set}, {x} = {y} \[RightArrow] \
x = y\"\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"y : Set\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"{x} = {y} \[RightArrow] x = y\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"H : {x} = {y}\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = y\"\>"},
                    {"ID", "11"},
                    {"Rule", "\<\"eq.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = {y}.Union = (x = y)\"\>"},
                    {"ID", "5"},
                    {"Rule", "\<\"eq.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = {y}.Union = (x = {y}.Union)\"\>"},
                    {"ID", "3"},
                    {"Rule", "\<\"eq.refl\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"{y}.Union = y\"\>"},
                    {"ID", "4"},
                    {"Rule", "\<\"Set.Union_singleton\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = {y}.Union\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"eq.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"{x}.Union = {y}.Union = (x = {y}.Union)\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"eq.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"{x}.Union = {y}.Union = ({x}.Union = \
{y}.Union)\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"eq.refl\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"{x}.Union = x\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"Set.Union_singleton\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"{x}.Union = {y}.Union\"\>"},
                    {"ID", "9"},
                    {"Rule", "\<\"congr_arg\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"H : {x} = {y}\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {Rule, 
                    "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = y)"}, {$CellContext`ID, 5}, {
                    Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union"}, {$CellContext`ID, 10}, {Rule, 
                    "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {Rule, 
                    "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "x = y"}, {$CellContext`ID, 
                    11}, {Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = y)"}, {$CellContext`ID, 5}, {
                    Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union"}, {$CellContext`ID, 10}, {
                    Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {
                    Rule, "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "y : Set"}, {$CellContext`ID, 
                    1}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x} = {y} \[RightArrow] x = y"}, {$CellContext`ID, 12}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "x = y"}, {$CellContext`ID, 
                    11}, {Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = y)"}, {$CellContext`ID, 5}, {
                    Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {
                    Rule, "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union"}, {$CellContext`ID, 10}, {
                    Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {
                    Rule, "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {
                    Rule, "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Arguments, 
          Column[{
            
            Grid[{{$CellContext`Goal, "x : Set"}, {$CellContext`ID, 0}, {
              Rule, $CellContext`Assumption}}, Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
            
            Grid[{{$CellContext`Goal, 
               
               "\[ForAll] {y : Set}, {x} = {y} \[RightArrow] x = y"}, \
{$CellContext`ID, 13}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
               OpenerView[{$CellContext`Arguments, 
                 Column[{
                   
                   Grid[{{$CellContext`Goal, "y : Set"}, {$CellContext`ID, 
                    1}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                   
                   Grid[{{$CellContext`Goal, 
                    "{x} = {y} \[RightArrow] x = y"}, {$CellContext`ID, 12}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "x = y"}, {$CellContext`ID, 
                    11}, {Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = y)"}, {$CellContext`ID, 5}, {
                    Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {
                    Rule, "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union"}, {$CellContext`ID, 10}, {
                    Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {
                    Rule, "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {
                    Rule, "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
             Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
       DynamicModuleValues:>{}],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.805273553686541*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"c9778f9f-96a8-42aa-a9f5-f1db91c81920"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"Lean", ",", "\"\<Set.regularity\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.805173270287466*^9, 3.8051732803391743`*^9}, {
  3.80517935172017*^9, 3.8051793526794233`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"54fc49ce-f26f-4fbc-ba8e-42b2489df1ef"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] (x : Set), x \[NotEqual] \[EmptySet] \
\[RightArrow] (\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet])\"\>"},
    {"ID", "42"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"x : Set\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"x \[NotEqual] \[EmptySet] \[RightArrow] (\
\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \[EmptySet])\"\>"},
                    {"ID", "41"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : x \[NotEqual] \[EmptySet]\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]\"\>"},
                    {"ID", "40"},
                    {"Rule", "\<\"classical.by_contradiction\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(\[Not]\[Exists] (y : Set) (H : y \[Element] \
x), x \:2229 y = \[EmptySet]) \[RightArrow] false\"\>"},
                    {"ID", "39"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"ne : \[Not]\[Exists] (y : Set) (H : y \
\[Element] x), x \:2229 y = \[EmptySet]\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "38"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : x \[NotEqual] \[EmptySet]\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = \[EmptySet]\"\>"},
                    {"ID", "37"},
                    {"Rule", "\<\"iff.mpr\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"x = \[EmptySet] \[LeftRightArrow] \[ForAll] \
(y : Set), y \[NotElement] x\"\>"},
                    {"ID", "3"},
                    {"Rule", "\<\"Set.eq_empty\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[ForAll] (y : Set), y \[NotElement] x\"\>"},
                    {"ID", "36"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"y \[NotElement] x\"\>"},
                    {"ID", "35"},
                    {"Rule", "\<\"Set.induction_on\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (z : Set), (\[ForAll] (w : Set), w \
\[Element] z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x\
\"\>"},
                    {"ID", "34"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(\[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x\"\>"},
                    {"ID", "33"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : \[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x\"\>"},
                    {"ID", "6"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"z \[NotElement] x\"\>"},
                    {"ID", "32"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"z \[NotElement] x \[RightArrow] z \
\[NotElement] x\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"this : z \[NotElement] x\"\>"},
                    {"ID", "7"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"this : z \[NotElement] x\"\>"},
                    {"ID", "7"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"z \[Element] x \[RightArrow] false\"\>"},
                    {"ID", "31"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"zx : z \[Element] x\"\>"},
                    {"ID", "9"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "30"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"ne : \[Not]\[Exists] (y : Set) (H : y \
\[Element] x), x \:2229 y = \[EmptySet]\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]\"\>"},
                    {"ID", "29"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]\"\>"},
                    {"ID", "28"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"zx : z \[Element] x\"\>"},
                    {"ID", "9"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x \:2229 z = \[EmptySet]\"\>"},
                    {"ID", "27"},
                    {"Rule", "\<\"iff.mpr\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"x \:2229 z = \[EmptySet] \[LeftRightArrow] \
\[ForAll] (y : Set), y \[NotElement] x \:2229 z\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"Set.eq_empty\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false\"\>"},
                    {"ID", "26"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"w \[Element] x \:2229 z \[RightArrow] \
false\"\>"},
                    {"ID", "25"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"wxz : w \[Element] x \:2229 z\"\>"},
                    {"ID", "12"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "24"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"w \[Element] x \[And] w \[Element] z \
\[RightArrow] false\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"_a : w \[Element] x \[And] w \[Element] \
z\"\>"},
                    {"ID", "13"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"and.dcases_on\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"_a : w \[Element] x \[And] w \[Element] \
z\"\>"},
                    {"ID", "13"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"left : w \[Element] x\"\>"},
                    {"ID", "14"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"w \[Element] z \[RightArrow] false\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"right : w \[Element] z\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"id_rhs\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : \[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x\"\>"},
                    {"ID", "6"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"right : w \[Element] z\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"left : w \[Element] x\"\>"},
                    {"ID", "14"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]},
                {
                 TagBox[GridBox[{
                    {"Goal", "\<\"w \[Element] x \[And] w \[Element] z\"\>"},
                    {"ID", "23"},
                    {"Rule", "\<\"iff.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"w \[Element] x \:2229 z \[LeftRightArrow] w \
\[Element] x \[And] w \[Element] z\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"Set.mem_inter\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"wxz : w \[Element] x \:2229 z\"\>"},
                    {"ID", "12"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \[And] w \[Element] z \[RightArrow] false"}, \
{$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 20}, {
                    Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID, 
              23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 24}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \[And] w \[Element] z \[RightArrow] false"}, \
{$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 20}, {
                    Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID, 
              23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "w \[Element] x \:2229 z \[RightArrow] false"}, {$CellContext`ID, 
       25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 24}, {
             Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
      Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{}]}]}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] (w : Set), w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 26}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 24}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
       27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : \
Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
             Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{}]}]}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (w : Set), w \[Element] x \:2229 z \[RightArrow] \
false"}, {$CellContext`ID, 26}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "\[Exists] (H : z \[Element] x), x \:2229 z = \[EmptySet]"}, \
{$CellContext`ID, 28}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "zx : z \[Element] x"}, {$CellContext`ID,
               9}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
             Rule, "iff.mpr"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 2}, {Rule, $CellContext`Assumption}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \[EmptySet]"}, \
{$CellContext`ID, 29}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (H : z \[Element] x), x \:2229 z = \[EmptySet]"}, \
{$CellContext`ID, 28}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 30}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 \
y = \[EmptySet]"}, {$CellContext`ID, 2}, {Rule, $CellContext`Assumption}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {
             Rule, "Exists.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, {$CellContext`ID,
        8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 31}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "zx : z \[Element] x"}, {$CellContext`ID,
               9}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 30}, {
             Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "z \[NotElement] x"}, {$CellContext`ID, 32}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 31}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 30}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \[NotElement] x) \
\[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "z \[NotElement] x"}, {$CellContext`ID, 
              32}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "y \[NotElement] x"}, {$CellContext`ID, 35}, {
      Rule, "Set.induction_on"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
      Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{}]}]}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] (y : Set), y \[NotElement] x"}, {$CellContext`ID, 36}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "y \[NotElement] x"}, {$CellContext`ID, 
              35}, {Rule, "Set.induction_on"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "x = \[EmptySet]"}, {$CellContext`ID, 37}, {
      Rule, "iff.mpr"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              
              "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
             Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{}]}]}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (y : Set), y \[NotElement] x"}, {$CellContext`ID, 
              36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {Rule,
                     "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 2}, {Rule, $CellContext`Assumption}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 38}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, "x = \[EmptySet]"}, {$CellContext`ID, 
              37}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (y : Set), y \[NotElement] x"}, \
{$CellContext`ID, 36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
                    27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "(\[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]) \[RightArrow] false"}, {$CellContext`ID, 39}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 \
y = \[EmptySet]"}, {$CellContext`ID, 2}, {Rule, $CellContext`Assumption}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 38}, {
             Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet]"}, {$CellContext`ID, 37}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (y : Set), y \[NotElement] x"}, \
{$CellContext`ID, 36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
                    27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \[EmptySet]"}, \
{$CellContext`ID, 40}, {
      Rule, "classical.by_contradiction"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "(\[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]) \[RightArrow] false"}, {$CellContext`ID, 39}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 38}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet]"}, {$CellContext`ID, 37}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (y : Set), y \[NotElement] x"}, \
{$CellContext`ID, 36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
                    27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "x : Set"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "x \[NotEqual] \[EmptySet] \[RightArrow] (\[Exists] (y : Set) (H : y \
\[Element] x), x \:2229 y = \[EmptySet])"}, {$CellContext`ID, 41}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 40}, {
             Rule, "classical.by_contradiction"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(\[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]) \[RightArrow] false"}, {$CellContext`ID, 39}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    38}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet]"}, {$CellContext`ID, 37}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (y : Set), y \[NotElement] x"}, \
{$CellContext`ID, 36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {Rule, 
                    "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
                    27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{3.805273558988542*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"15d25bef-4484-4b49-a369-b8e1f64adf93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProveUsingLeanTactic", "[", 
  RowBox[{"Lean", ",", 
   RowBox[{"ForAllTyped", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "r"}], "}"}], ",", "Prop", ",", 
     RowBox[{"Implies", "[", 
      RowBox[{
       RowBox[{"Implies", "[", 
        RowBox[{"p", ",", 
         RowBox[{"Implies", "[", 
          RowBox[{"q", ",", "r"}], "]"}]}], "]"}], ",", 
       RowBox[{"Implies", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}]}], "]"}]}], "]"}],
    ",", "\"\<mm_prover\>\"", ",", " ", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.805179143365593*^9, 3.805179198134095*^9}, {
  3.80517923973461*^9, 3.805179248961309*^9}, {3.805179284223929*^9, 
  3.805179284968464*^9}, {3.8051793562116327`*^9, 3.805179357104827*^9}, {
  3.805179518703372*^9, 3.80517952132436*^9}, {3.8051799388110313`*^9, 
  3.8051799391120653`*^9}, {3.805183105386093*^9, 3.8051831083427343`*^9}, {
  3.8051831934909153`*^9, 3.805183195538686*^9}, {3.805183340393325*^9, 
  3.805183340998559*^9}, {3.805183938935348*^9, 3.805183940855002*^9}, {
  3.805184495996064*^9, 3.805184509567741*^9}, {3.805184749019628*^9, 
  3.8051847758541203`*^9}, {3.8052735027431707`*^9, 3.805273507022134*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e53294c3-0f29-4a93-8549-436b21e44ed8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] (h h_1 h_2 : Prop), (h \[RightArrow] h_1 \
\[RightArrow] h_2) \[RightArrow] h \[And] h_1 \[RightArrow] h_2\"\>"},
    {"ID", "12"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"h : Prop\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (h_1 h_2 : Prop), (h \[RightArrow] \
h_1 \[RightArrow] h_2) \[RightArrow] h \[And] h_1 \[RightArrow] h_2\"\>"},
                    {"ID", "11"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h_1 : Prop\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (h_2 : Prop), (h \[RightArrow] h_1 \
\[RightArrow] h_2) \[RightArrow] h \[And] h_1 \[RightArrow] h_2\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h_2 : Prop\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(h \[RightArrow] h_1 \[RightArrow] h_2) \
\[RightArrow] h \[And] h_1 \[RightArrow] h_2\"\>"},
                    {"ID", "9"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h_3 : h \[RightArrow] h_1 \[RightArrow] \
h_2\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h \[And] h_1 \[RightArrow] h_2\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h_4 : h \[And] h_1\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h_2\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h_3 : h \[RightArrow] h_1 \[RightArrow] \
h_2\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h\"\>"},
                    {"ID", "5"},
                    {"Rule", "\<\"and.left\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h_4 : h \[And] h_1\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h_1\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"and.right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h_4 : h \[And] h_1\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h"}, {$CellContext`ID, 
                    5}, {Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_1"}, {$CellContext`ID, 
                    6}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_2"}, {$CellContext`ID, 
                    7}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h"}, {$CellContext`ID, 
                    5}, {Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_1"}, {$CellContext`ID, 
                    6}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h \[And] h_1 \[RightArrow] h_2"}, {$CellContext`ID, 8}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_2"}, {$CellContext`ID, 7}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h"}, {$CellContext`ID, 
                    5}, {Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_1"}, {$CellContext`ID, 
                    6}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "h_2 : Prop"}, {$CellContext`ID,
                     2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "(h \[RightArrow] h_1 \[RightArrow] h_2) \[RightArrow] h \
\[And] h_1 \[RightArrow] h_2"}, {$CellContext`ID, 9}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h \[And] h_1 \[RightArrow] h_2"}, {$CellContext`ID, 8}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_2"}, {$CellContext`ID, 7}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h"}, {$CellContext`ID, 5}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "h_1"}, {$CellContext`ID, 6}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 
                    4}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "h_1 : Prop"}, {$CellContext`ID,
                     1}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (h_2 : Prop), (h \[RightArrow] h_1 \
\[RightArrow] h_2) \[RightArrow] h \[And] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 10}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "h_2 : Prop"}, {$CellContext`ID,
                     2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(h \[RightArrow] h_1 \[RightArrow] h_2) \[RightArrow] h \
\[And] h_1 \[RightArrow] h_2"}, {$CellContext`ID, 9}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h \[And] h_1 \[RightArrow] h_2"}, {$CellContext`ID, 8}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_2"}, {$CellContext`ID, 7}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h"}, {$CellContext`ID, 5}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_1"}, {$CellContext`ID, 6}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "h : Prop"}, {$CellContext`ID, 0}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (h_1 h_2 : Prop), (h \[RightArrow] h_1 \[RightArrow] \
h_2) \[RightArrow] h \[And] h_1 \[RightArrow] h_2"}, {$CellContext`ID, 11}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, "h_1 : Prop"}, {$CellContext`ID, 
                    1}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (h_2 : Prop), (h \[RightArrow] h_1 \
\[RightArrow] h_2) \[RightArrow] h \[And] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 10}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "h_2 : Prop"}, {$CellContext`ID,
                     2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(h \[RightArrow] h_1 \[RightArrow] h_2) \[RightArrow] h \
\[And] h_1 \[RightArrow] h_2"}, {$CellContext`ID, 9}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h \[And] h_1 \[RightArrow] h_2"}, {$CellContext`ID, 8}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_2"}, {$CellContext`ID, 7}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_3 : h \[RightArrow] h_1 \[RightArrow] h_2"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h"}, {$CellContext`ID, 5}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "h_1"}, {$CellContext`ID, 6}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h_4 : h \[And] h_1"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>{}],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]], "Output",
 CellChangeTimes->{3.8052735617291937`*^9, 3.806230735282114*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1a3b8dd7-f1c6-430e-a497-e800150be402"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RunLeanTactic", "[", 
  RowBox[{"Lean", ",", 
   RowBox[{"ForAllTyped", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "r"}], "}"}], ",", "Prop", ",", 
     RowBox[{"Implies", "[", 
      RowBox[{
       RowBox[{"Implies", "[", 
        RowBox[{"p", ",", 
         RowBox[{"Implies", "[", 
          RowBox[{"q", ",", "r"}], "]"}]}], "]"}], ",", 
       RowBox[{"Implies", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}]}], "]"}]}], "]"}],
    ",", "\"\<print_translation\>\"", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.805273019668552*^9, 3.805273046602586*^9}, {
  3.8052731209191217`*^9, 3.805273128506444*^9}, {3.805273262193851*^9, 
  3.805273275084464*^9}, {3.805540558446203*^9, 3.8055405599493732`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e44935c6-8cbe-4e38-87cf-2a2c9a640ade"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Lean native\"\>", "\<\"\[ForAll] (p q r : Prop), (p \[RightArrow] q \
\[RightArrow] r) \[RightArrow] p \[And] q \[RightArrow] r\"\>"},
    {"\<\"Mathematica form\"\>", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Text"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Text"},
            {"", 
             PaneBox[
              InterpretationBox[
               StyleBox[
                RowBox[{"LeanPi", "[", 
                 RowBox[{
                  RowBox[{"LeanNameMkString", "[", 
                   RowBox[{"\"\<p\>\"", ",", " ", "LeanNameAnonymous"}], 
                   "]"}], ",", " ", "BinderInfoDefault", ",", " ", 
                  RowBox[{"LeanSort", "[", "LeanZeroLevel", "]"}], ",", " ", 
                  RowBox[{"LeanPi", "[", 
                   RowBox[{
                    RowBox[{"LeanNameMkString", "[", 
                    RowBox[{"\"\<q\>\"", ",", " ", "LeanNameAnonymous"}], 
                    "]"}], ",", " ", "BinderInfoDefault", ",", " ", 
                    RowBox[{"LeanSort", "[", "LeanZeroLevel", "]"}], ",", " ", 
                    RowBox[{"LeanPi", "[", 
                    RowBox[{
                    RowBox[{"LeanNameMkString", "[", 
                    RowBox[{"\"\<r\>\"", ",", " ", "LeanNameAnonymous"}], 
                    "]"}], ",", " ", "BinderInfoDefault", ",", " ", 
                    RowBox[{"LeanSort", "[", "LeanZeroLevel", "]"}], ",", " ", 
                    RowBox[{"LeanPi", "[", 
                    RowBox[{
                    RowBox[{"LeanNameMkString", "[", 
                    RowBox[{"\"\<a\>\"", ",", " ", "LeanNameAnonymous"}], 
                    "]"}], ",", " ", "BinderInfoDefault", ",", " ", 
                    RowBox[{"LeanPi", "[", 
                    RowBox[{
                    RowBox[{"LeanNameMkString", "[", 
                    RowBox[{"\"\<a\>\"", ",", " ", "LeanNameAnonymous"}], 
                    "]"}], ",", " ", "BinderInfoDefault", ",", " ", 
                    RowBox[{"LeanVar", "[", "2", "]"}], ",", " ", 
                    RowBox[{"LeanPi", "[", 
                    RowBox[{
                    RowBox[{"LeanNameMkString", "[", 
                    RowBox[{"\"\<a\>\"", ",", " ", "LeanNameAnonymous"}], 
                    "]"}], ",", " ", "BinderInfoDefault", ",", " ", 
                    RowBox[{"LeanVar", "[", "2", "]"}], ",", " ", 
                    RowBox[{"LeanVar", "[", "2", "]"}]}], "]"}]}], "]"}], ",",
                     " ", 
                    RowBox[{"LeanPi", "[", 
                    RowBox[{
                    RowBox[{"LeanNameMkString", "[", 
                    RowBox[{"\"\<a\>\"", ",", " ", "LeanNameAnonymous"}], 
                    "]"}], ",", " ", "BinderInfoDefault", ",", " ", 
                    RowBox[{"LeanApp", "[", 
                    RowBox[{
                    RowBox[{"LeanApp", "[", 
                    RowBox[{
                    RowBox[{"LeanConst", "[", 
                    RowBox[{
                    RowBox[{"LeanNameMkString", "[", 
                    RowBox[{"\"\<and\>\"", ",", " ", "LeanNameAnonymous"}], 
                    "]"}], ",", " ", "LeanLevelListNil"}], "]"}], ",", " ", 
                    RowBox[{"LeanVar", "[", "3", "]"}]}], "]"}], ",", " ", 
                    RowBox[{"LeanVar", "[", "2", "]"}]}], "]"}], ",", " ", 
                    RowBox[{"LeanVar", "[", "2", "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}],
                ShowStringCharacters->True,
                NumberMarks->True],
               InputForm[
                $CellContext`LeanPi[
                 $CellContext`LeanNameMkString[
                 "p", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                 $CellContext`LeanSort[$CellContext`LeanZeroLevel], 
                 $CellContext`LeanPi[
                  $CellContext`LeanNameMkString[
                  "q", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                  $CellContext`LeanSort[$CellContext`LeanZeroLevel], 
                  $CellContext`LeanPi[
                   $CellContext`LeanNameMkString[
                   "r", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                   $CellContext`LeanSort[$CellContext`LeanZeroLevel], 
                   $CellContext`LeanPi[
                    $CellContext`LeanNameMkString[
                    "a", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                    $CellContext`LeanPi[
                    $CellContext`LeanNameMkString[
                    "a", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                    $CellContext`LeanVar[2], 
                    $CellContext`LeanPi[
                    $CellContext`LeanNameMkString[
                    "a", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                    $CellContext`LeanVar[2], 
                    $CellContext`LeanVar[2]]], 
                    $CellContext`LeanPi[
                    $CellContext`LeanNameMkString[
                    "a", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                    $CellContext`LeanApp[
                    $CellContext`LeanApp[
                    $CellContext`LeanConst[
                    $CellContext`LeanNameMkString[
                    "and", $CellContext`LeanNameAnonymous], \
$CellContext`LeanLevelListNil], 
                    $CellContext`LeanVar[3]], 
                    $CellContext`LeanVar[2]], 
                    $CellContext`LeanVar[2]]]]]]],
               AutoDelete->True,
               Editable->True],
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{Text, 
          InputForm[
           $CellContext`LeanPi[
            $CellContext`LeanNameMkString[
            "p", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
            $CellContext`LeanSort[$CellContext`LeanZeroLevel], 
            $CellContext`LeanPi[
             $CellContext`LeanNameMkString[
             "q", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
             $CellContext`LeanSort[$CellContext`LeanZeroLevel], 
             $CellContext`LeanPi[
              $CellContext`LeanNameMkString[
              "r", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
              $CellContext`LeanSort[$CellContext`LeanZeroLevel], 
              $CellContext`LeanPi[
               $CellContext`LeanNameMkString[
               "a", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
               $CellContext`LeanPi[
                $CellContext`LeanNameMkString[
                "a", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                $CellContext`LeanVar[2], 
                $CellContext`LeanPi[
                 $CellContext`LeanNameMkString[
                 "a", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                 $CellContext`LeanVar[2], 
                 $CellContext`LeanVar[2]]], 
               $CellContext`LeanPi[
                $CellContext`LeanNameMkString[
                "a", $CellContext`LeanNameAnonymous], \
$CellContext`BinderInfoDefault, 
                $CellContext`LeanApp[
                 $CellContext`LeanApp[
                  $CellContext`LeanConst[
                   $CellContext`LeanNameMkString[
                   "and", $CellContext`LeanNameAnonymous], \
$CellContext`LeanLevelListNil], 
                  $CellContext`LeanVar[3]], 
                 $CellContext`LeanVar[2]], 
                $CellContext`LeanVar[2]]]]]]]}, False]],
       DynamicModuleValues:>{}],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.85]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.805273564640039*^9, {3.805540561573024*^9, 3.805540573427721*^9}, {
   3.806230729176538*^9, 3.8062307332719*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"dacf5938-4831-4c3e-9609-133665f584b5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", 
  "\"\<../_target/deps/mathematica/src/lean_form.m\>\""}]], "Input",
 CellChangeTimes->{{3.716562188206143*^9, 3.71656220354294*^9}, {
   3.716657046744205*^9, 3.716657047344171*^9}, {3.716658439872884*^9, 
   3.716658443191935*^9}, {3.7583557921274242`*^9, 3.758355803747884*^9}, {
   3.758356198488882*^9, 3.7583562184424343`*^9}, {3.758356405477998*^9, 
   3.758356446604084*^9}, 3.758356596741905*^9, {3.758356634827507*^9, 
   3.758356635616549*^9}, {3.758356937628787*^9, 3.758356965047028*^9}, {
   3.758357014518546*^9, 3.7583570215232697`*^9}, {3.758357302376919*^9, 
   3.758357307360552*^9}, {3.758358091307436*^9, 3.758358093806889*^9}, {
   3.75840543120122*^9, 3.758405432289085*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"96df7dc0-0d81-4619-af8b-2e39fb6f869c"],

Cell[BoxData[
 RowBox[{"<<", "\"\<natural_deduction_graphs.wl\>\""}]], "Input",
 CellChangeTimes->{{3.7166570644967527`*^9, 3.716657083663563*^9}, {
  3.7166580372531137`*^9, 3.7166580442448807`*^9}, {3.716659964237204*^9, 
  3.716659964437479*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7296ff3c-3f52-4327-9d49-8e85c90f92c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiagramOfFormula", "[", 
  RowBox[{"Lean", ",", 
   RowBox[{"ForAll", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"P", ",", "Q"}], "}"}], ",", 
     RowBox[{"Implies", "[", 
      RowBox[{"P", ",", 
       RowBox[{"Or", "[", 
        RowBox[{
         RowBox[{"Not", "[", "Q", "]"}], ",", "P"}], "]"}]}], "]"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"P", ",", "Q"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.758357555057588*^9, 3.758357585307502*^9}, {
  3.758357752301716*^9, 3.758357773405452*^9}, {3.8062290024386063`*^9, 
  3.806229010459382*^9}, {3.806229600363234*^9, 3.806229602475047*^9}, {
  3.806229755927445*^9, 3.8062297570653763`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"beece667-a5ed-49e1-b11a-3a614ab13676"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{10, 11, 12}, {{{1, 2}, {2, 3}}, Null}, {EdgeShapeFunction -> {{
          Arrowheads[{{Medium, 0.55}}], 
          Arrow[#]}& }, EdgeStyle -> {
         GrayLevel[0, 0.3]}, GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {12 -> Placed[
           Column[{
             Style["\[Implies]I  [a]", 12, FontColor -> GrayLevel[0.3]], 
             Style[
              HoldForm[
               Implies[$CellContext`P, 
                HoldForm[
                 Or[
                  HoldForm[
                   Not[$CellContext`Q]], $CellContext`P]]]], 16, FontFamily -> 
              "Times"]}, Frame -> All, Alignment -> Center, FrameStyle -> 
            GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 11 -> Placed[
           Column[{
             Style["\[Or]IR", 12, FontColor -> GrayLevel[0.3]], 
             Style[
              HoldForm[
               Or[
                HoldForm[
                 Not[$CellContext`Q]], $CellContext`P]], 16, FontFamily -> 
              "Times"]}, Frame -> All, Alignment -> Center, FrameStyle -> 
            GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 10 -> Placed[
           Column[{
             Style["Hyp: a", 12, FontColor -> GrayLevel[0.3]], 
             Style[$CellContext`P, 16, FontFamily -> "Times"]}, Frame -> All, 
            Alignment -> Center, FrameStyle -> GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Opacity[0.3], 
        {Arrowheads[{{Medium, 0.55}}], 
         ArrowBox[{{0., 3.6739403974420594`*^-16}, {1., 
          2.4492935982947064`*^-16}}]}, 
        {Arrowheads[{{Medium, 0.55}}], 
         ArrowBox[{{1., 2.4492935982947064`*^-16}, {2., 0.}}]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 3.6739403974420594*^-16}, 0.02261146496815286], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Hyp: a\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox["P",
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {0., 3.6739403974420594*^-16},
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 2.4492935982947064*^-16}, 0.02261146496815286], InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"\[Or]IR\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox[
               RowBox[{
                RowBox[{"\[Not]", "Q"}], "\[Or]", "P"}],
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {1., 2.4492935982947064*^-16},
          BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.02261146496815286], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"\[Implies]I  [a]\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox[
               RowBox[{"P", "\[Implies]", 
                RowBox[{
                 RowBox[{"\[Not]", "Q"}], "\[Or]", "P"}]}],
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {2., 0.},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.806230347993849*^9, 3.806230720782403*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"fce3a073-b4b9-4463-b888-ef3bec2d8fcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiagramOfFormula", "[", 
  RowBox[{"Lean", ",", 
   RowBox[{"ForAllTyped", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "r"}], "}"}], ",", "Prop", ",", 
     RowBox[{"Implies", "[", 
      RowBox[{
       RowBox[{"Implies", "[", 
        RowBox[{"p", ",", 
         RowBox[{"Implies", "[", 
          RowBox[{"q", ",", "r"}], "]"}]}], "]"}], ",", 
       RowBox[{"Implies", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}]}], "]"}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "q", ",", "r"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806230602934257*^9, 3.806230603290223*^9}, {
  3.806230665253668*^9, 3.806230667552019*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"565fc1e2-86cc-49c2-ab9f-5aaf01d47489"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 
      9}, {{{1, 4}, {2, 3}, {3, 4}, {5, 6}, {4, 7}, {6, 7}, {7, 8}, {8, 9}}, 
       Null}, {EdgeShapeFunction -> {{
          Arrowheads[{{Medium, 0.55}}], 
          Arrow[#]}& }, EdgeStyle -> {
         GrayLevel[0, 0.3]}, GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {6 -> Placed[
           Column[{
             Style["\[And]ER", 12, FontColor -> GrayLevel[0.3]], 
             Style[$CellContext`q, 16, FontFamily -> "Times"]}, Frame -> All, 
            Alignment -> Center, FrameStyle -> GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 3 -> Placed[
           Column[{
             Style["\[And]EL", 12, FontColor -> GrayLevel[0.3]], 
             Style[$CellContext`p, 16, FontFamily -> "Times"]}, Frame -> All, 
            Alignment -> Center, FrameStyle -> GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 5 -> Placed[
           Column[{
             Style["Hyp: a1", 12, FontColor -> GrayLevel[0.3]], 
             Style[
              HoldForm[
               And[$CellContext`p, $CellContext`q]], 16, FontFamily -> 
              "Times"]}, Frame -> All, Alignment -> Center, FrameStyle -> 
            GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 8 -> Placed[
           Column[{
             Style["\[Implies]I  [a1]", 12, FontColor -> GrayLevel[0.3]], 
             Style[
              HoldForm[
               Implies[
                HoldForm[
                 And[$CellContext`p, $CellContext`q]], $CellContext`r]], 16, 
              FontFamily -> "Times"]}, Frame -> All, Alignment -> Center, 
            FrameStyle -> GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 7 -> Placed[
           Column[{
             Style["\[Implies]E", 12, FontColor -> GrayLevel[0.3]], 
             Style[$CellContext`r, 16, FontFamily -> "Times"]}, Frame -> All, 
            Alignment -> Center, FrameStyle -> GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 9 -> Placed[
           Column[{
             Style["\[Implies]I  [a]", 12, FontColor -> GrayLevel[0.3]], 
             Style[
              HoldForm[
               Implies[
                HoldForm[
                 Implies[$CellContext`p, 
                  HoldForm[
                   Implies[$CellContext`q, $CellContext`r]]]], 
                HoldForm[
                 Implies[
                  HoldForm[
                   And[$CellContext`p, $CellContext`q]], $CellContext`r]]]], 
              16, FontFamily -> "Times"]}, Frame -> All, Alignment -> Center, 
            FrameStyle -> GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 4 -> Placed[
           Column[{
             Style["\[Implies]E", 12, FontColor -> GrayLevel[0.3]], 
             Style[
              HoldForm[
               Implies[$CellContext`q, $CellContext`r]], 16, FontFamily -> 
              "Times"]}, Frame -> All, Alignment -> Center, FrameStyle -> 
            GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 2 -> Placed[
           Column[{
             Style["Hyp: a1", 12, FontColor -> GrayLevel[0.3]], 
             Style[
              HoldForm[
               And[$CellContext`p, $CellContext`q]], 16, FontFamily -> 
              "Times"]}, Frame -> All, Alignment -> Center, FrameStyle -> 
            GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center], 1 -> Placed[
           Column[{
             Style["Hyp: a", 12, FontColor -> GrayLevel[0.3]], 
             Style[
              HoldForm[
               Implies[$CellContext`p, 
                HoldForm[
                 Implies[$CellContext`q, $CellContext`r]]]], 16, FontFamily -> 
              "Times"]}, Frame -> All, Alignment -> Center, FrameStyle -> 
            GrayLevel[0.7], Background -> {{
               GrayLevel[0.95], 
               GrayLevel[0.9]}}], Center]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Opacity[0.3], 
        {Arrowheads[{{Medium, 0.55}}], ArrowBox[{{0., 4.}, {1., 3.}}]}, 
        {Arrowheads[{{Medium, 0.55}}], ArrowBox[{{1., 5.}, {1., 4.}}]}, 
        {Arrowheads[{{Medium, 0.55}}], ArrowBox[{{1., 4.}, {1., 3.}}]}, 
        {Arrowheads[{{Medium, 0.55}}], ArrowBox[{{1., 3.}, {2., 2.}}]}, 
        {Arrowheads[{{Medium, 0.55}}], ArrowBox[{{2., 4.}, {2., 3.}}]}, 
        {Arrowheads[{{Medium, 0.55}}], ArrowBox[{{2., 3.}, {2., 2.}}]}, 
        {Arrowheads[{{Medium, 0.55}}], ArrowBox[{{2., 2.}, {2., 1.}}]}, 
        {Arrowheads[{{Medium, 0.55}}], ArrowBox[{{2., 1.}, {2., 0.}}]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 4.}, 0.043048128342245986], InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Hyp: a\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox[
               RowBox[{"p", "\[Implies]", 
                RowBox[{"(", 
                 RowBox[{"q", "\[Implies]", "r"}], ")"}]}],
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {0., 4.},
          BaseStyle->"Graphics"]}, {DiskBox[{1., 5.}, 0.043048128342245986], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Hyp: a1\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox[
               RowBox[{"p", "\[And]", "q"}],
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {1., 5.},
          BaseStyle->"Graphics"]}, {DiskBox[{1., 4.}, 0.043048128342245986], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"\[And]EL\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox["p",
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {1., 4.},
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.043048128342245986], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"\[Implies]E\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox[
               RowBox[{"q", "\[Implies]", "r"}],
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {1., 3.},
          BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.043048128342245986], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Hyp: a1\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox[
               RowBox[{"p", "\[And]", "q"}],
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {2., 4.},
          BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.043048128342245986], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"\[And]ER\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox["q",
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {2., 3.},
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.043048128342245986], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"\[Implies]E\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox["r",
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {2., 2.},
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.043048128342245986], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"\[Implies]I  [a1]\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox[
               RowBox[{
                RowBox[{"p", "\[And]", "q"}], "\[Implies]", "r"}],
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {2., 1.},
          BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.043048128342245986], 
         InsetBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"\[Implies]I  [a]\"\>",
               StripOnInput->False,
               FontSize->12,
               FontColor->GrayLevel[0.3]]},
             {
              StyleBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"p", "\[Implies]", 
                  RowBox[{"(", 
                   RowBox[{"q", "\[Implies]", "r"}], ")"}]}], ")"}], 
                "\[Implies]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p", "\[And]", "q"}], "\[Implies]", "r"}], ")"}]}],
               StripOnInput->False,
               FontFamily->"Times",
               FontSize->16]}
            },
            DefaultBaseStyle->"Column",
            FrameStyle->GrayLevel[0.7],
            GridBoxAlignment->{"Columns" -> {{Center}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {{
                 GrayLevel[0.95], 
                 GrayLevel[0.9]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Column"], {2., 0.},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.806230717886972*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"202d10a5-ba80-4828-b11a-82dcd1a001d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"QuitLeanMode", "[", "Lean", "]"}]], "Input",
 CellChangeTimes->{{3.805179392379258*^9, 3.805179393602859*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"74feae36-5665-4e87-ae08-27945938bd89"]
},
WindowSize->{1850, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 262, 7, 31, "Input",ExpressionUUID->"162b0d4a-2c45-4677-8210-902b773d4ccd"],
Cell[823, 29, 362, 8, 31, "Input",ExpressionUUID->"90b5dffd-6085-4ae5-a8b1-fb46c820ea5c"],
Cell[1188, 39, 329, 9, 31, "Input",ExpressionUUID->"6677c453-64a6-4f46-98c5-59de4101cd22"],
Cell[1520, 50, 703, 11, 31, "Input",ExpressionUUID->"0e600f33-c4d8-43ae-953b-4166b2dbe04e"],
Cell[2226, 63, 220, 4, 31, "Input",ExpressionUUID->"3d3c020a-c399-4ac9-850b-6a200b89dac3"],
Cell[CellGroupData[{
Cell[2471, 71, 676, 10, 31, "Input",ExpressionUUID->"bff7d237-7b23-4503-8ea8-a38367ef8b1f"],
Cell[3150, 83, 7971, 167, 67, "Output",ExpressionUUID->"d8243aed-ace5-4ed9-87a5-5ab5a4f2bfab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11158, 255, 213, 3, 31, "Input",ExpressionUUID->"a09aad19-bd35-49e2-b90b-28d31c8cc39d"],
Cell[11374, 260, 817, 11, 35, "Output",ExpressionUUID->"0b3313e4-9890-46d4-9c6d-8fe2ed1094c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12228, 276, 776, 14, 31, "Input",ExpressionUUID->"6eaa36ad-102d-410f-941e-29b4e97398c5"],
Cell[13007, 292, 125069, 2664, 104, "Output",ExpressionUUID->"83cf5bec-d936-423f-bb62-692dc0da71e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138113, 2961, 378, 7, 31, "Input",ExpressionUUID->"3739a398-32eb-40bf-9968-8ee78a5000ed"],
Cell[138494, 2970, 168950, 3585, 104, "Output",ExpressionUUID->"5cbbfc68-1c30-445b-9797-bcbe67baf0bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307481, 6560, 469, 8, 31, "Input",ExpressionUUID->"5afad108-4531-4842-ad18-1537188da0e1"],
Cell[307953, 6570, 188010, 3999, 104, "Output",ExpressionUUID->"798e2a43-f265-42a2-a135-d9b7dfab1865"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496000, 10574, 361, 6, 31, "Input",ExpressionUUID->"277762b0-34d1-4446-ba72-c2e499f8e50b"],
Cell[496364, 10582, 2636, 69, 84, "Output",ExpressionUUID->"fec74b07-381a-4bdc-9b21-008f2409cca1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499037, 10656, 276, 5, 31, "Input",ExpressionUUID->"7d6c7b11-bf9e-4adc-af49-3b38e73da4a2"],
Cell[499316, 10663, 2812, 71, 85, "Output",ExpressionUUID->"cef51a27-603d-4261-9bf6-d926a3a90563"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502165, 10739, 312, 5, 31, "Input",ExpressionUUID->"53c0faa5-8781-4294-8565-61bc9270e50b"],
Cell[502480, 10746, 63790, 1389, 104, "Output",ExpressionUUID->"c9778f9f-96a8-42aa-a9f5-f1db91c81920"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566307, 12140, 308, 5, 31, "Input",ExpressionUUID->"54fc49ce-f26f-4fbc-ba8e-42b2489df1ef"],
Cell[566618, 12147, 328311, 6797, 104, "Output",ExpressionUUID->"15d25bef-4484-4b49-a369-b8e1f64adf93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[894966, 18949, 1360, 27, 31, "Input",ExpressionUUID->"e53294c3-0f29-4a93-8549-436b21e44ed8"],
Cell[896329, 18978, 51608, 1103, 104, "Output",ExpressionUUID->"1a3b8dd7-f1c6-430e-a497-e800150be402"]
}, Open  ]],
Cell[CellGroupData[{
Cell[947974, 20086, 916, 21, 31, "Input",ExpressionUUID->"e44935c6-8cbe-4e38-87cf-2a2c9a640ade"],
Cell[948893, 20109, 9771, 215, 66, "Output",ExpressionUUID->"dacf5938-4831-4c3e-9609-133665f584b5"]
}, Open  ]],
Cell[958679, 20327, 806, 12, 31, "Input",ExpressionUUID->"96df7dc0-0d81-4619-af8b-2e39fb6f869c"],
Cell[959488, 20341, 327, 5, 31, "Input",ExpressionUUID->"7296ff3c-3f52-4327-9d49-8e85c90f92c6"],
Cell[CellGroupData[{
Cell[959840, 20350, 775, 19, 31, "Input",ExpressionUUID->"beece667-a5ed-49e1-b11a-3a614ab13676"],
Cell[960618, 20371, 5594, 134, 60, "Output",ExpressionUUID->"fce3a073-b4b9-4463-b888-ef3bec2d8fcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[966249, 20510, 841, 22, 31, "Input",ExpressionUUID->"565fc1e2-86cc-49c2-ab9f-5aaf01d47489"],
Cell[967093, 20534, 14700, 355, 449, "Output",ExpressionUUID->"202d10a5-ba80-4828-b11a-82dcd1a001d9"]
}, Open  ]],
Cell[981808, 20892, 212, 3, 31, "Input",ExpressionUUID->"74feae36-5665-4e87-ae08-27945938bd89"]
}
]
*)

