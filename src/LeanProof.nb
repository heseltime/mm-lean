(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    882983,      18657]
NotebookOptionsPosition[    880635,      18611]
NotebookOutlinePosition[    880969,      18626]
CellTagsIndexPosition[    880926,      18623]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Replace", " ", "your", " ", "Lean", " ", "executable", " ", "here"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7807986339734097`*^9, 
  3.780798659055052*^9}},ExpressionUUID->"162b0d4a-2c45-4677-8210-\
902b773d4ccd"],

Cell[BoxData[
 RowBox[{"LeanExecutable", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$HomeDirectory", ",", "\"\<.elan/bin/lean\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.784621981045166*^9, 3.7846219832293653`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"90b5dffd-6085-4ae5-a8b1-fb46c820ea5c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Set", " ", "the", " ", "working", " ", "directory", " ", "to", " ", "be", 
   " ", 
   RowBox[{
    RowBox[{"mm_lean", "/", "src"}], "/"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.780798584145817*^9, 
  3.780798615721925*^9}},ExpressionUUID->"6677c453-64a6-4f46-98c5-\
59de4101cd22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\<../mm-lean/src\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780798313465518*^9, 3.78079831397092*^9}, {
  3.7807983625464783`*^9, 3.780798367263343*^9}, {3.780799267268783*^9, 
  3.780799277078808*^9}, {3.784622011530985*^9, 3.784622029976153*^9}, {
  3.784622075207736*^9, 3.7846220844268503`*^9}, {3.784631873824744*^9, 
  3.784631936612627*^9}, {3.7846320050813093`*^9, 3.784632005876857*^9}, {
  3.8049265720036077`*^9, 3.80492658592445*^9}, {3.805173401335939*^9, 
  3.8051734086868753`*^9}},
 NumberMarks->False,ExpressionUUID->"0e600f33-c4d8-43ae-953b-4166b2dbe04e"],

Cell[BoxData["\<\"/home/minchao/proj/lean/mm-lean/src\"\>"], "Output",
 CellChangeTimes->{3.8049265875164833`*^9, 3.804927046574329*^9, 
  3.8051088748791428`*^9, 3.805108915611808*^9, 3.805171998190866*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"98577f59-ce79-466a-9b1e-160beea5ba33"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"<<", "\"\<main.m\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.780798944793867*^9, 3.780798948713229*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3d3c020a-c399-4ac9-850b-6a200b89dac3"],

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"LeanMode", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7292107682061567`*^9, 3.729210792176735*^9}, {
  3.7292110654894447`*^9, 3.7292110857282057`*^9}, {3.7292113499000683`*^9, 
  3.729211383420169*^9}, {3.7292114729156637`*^9, 3.729211545179541*^9}, {
  3.729211607492135*^9, 3.729211641382194*^9}, {3.729212573292335*^9, 
  3.7292125792009478`*^9}, {3.7292131279450006`*^9, 3.7292131664852962`*^9}, {
  3.729243934659246*^9, 3.7292439394021187`*^9}, {3.780798970625388*^9, 
  3.780798971363224*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"bff7d237-7b23-4503-8ea8-a38367ef8b1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProcessStatus", "[", "p", "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"a09aad19-bd35-49e2-b90b-28d31c8cc39d"],

Cell[BoxData["\<\"Running\"\>"], "Output",
 CellChangeTimes->{3.7807917207592373`*^9, 3.7807964393692293`*^9, 
  3.780796538283403*^9, 3.7807966750237923`*^9, 3.780796903767123*^9, 
  3.7807976101232347`*^9, 3.780797867648875*^9, 3.780798979079939*^9, 
  3.784622107054925*^9, 3.784631730676196*^9, 3.78463197177353*^9, 
  3.8049265969786386`*^9, 3.804927052181733*^9, 3.805108925899788*^9, 
  3.805172003439999*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d95a9744-3a76-4e83-b9a2-2fd03fb68126"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"p", ",", "\"\<nat.prime.dvd_of_dvd_pow\>\""}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdymkog3EAx/FlUuyFqwibIYz2gu3VXsmjUWquKTKUZGNoIkuKOVKubHih
uZqEtI2RaxY1K4okKay9QM7VRiE5kjy//4tvnzff2MoGqdyHwWDE0MHpD7ch
m++lNKc/M5DZd26GjrmEJehijK3CE/4x8UoywpHQ2prmiYlBXWlQFMymYIRz
Ixvez6RI4AFPXg7dz3biVZFOAYWjz0qo+oxugdrL4TbyizvGYLV1bRIu5VWt
w9m33E34Hqg8hBMhliMoHtr5hq8G9y80K6ICcmg74h0saMy6S4e33IUMuPlw
wtQLvdRyZ74vlEVsb03RasLP9qBP1M0+tPl7iSJh+wU0+PYT4zV1UmmJl+pJ
XiS6q/3LoGtCTtw1yurhinqcaBFwBmA3S0wUeK610BTG0cGLxwE9rCieJMaJ
yv8gO7WWaOfWtBbSWouaiS8Fpe0wVLeugarI3l748X5HdLI9g3A444uofsqU
mWj9unJL4Vkji3dEW0kpk+A/qHn1aA==
  "],
 CellLabel->"In[8]:=",ExpressionUUID->"6eaa36ad-102d-410f-941e-29b4e97398c5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] {p m n : \:2115}, nat.prime p \[RightArrow] p \
\[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
    {"ID", "24"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"p : \:2115\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {m n : \:2115}, nat.prime p \
\[RightArrow] p \[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "23"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m : \:2115\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {n : \:2115}, nat.prime p \
\[RightArrow] p \[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"nat.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ 0 \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"not.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]p \[Divides] 1\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"nat.prime.not_dvd_one\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {Rule, 
                    "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "15"},
                    {"Rule", "\<\"or.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m.pow n \[Or] p \[Divides] \
m\"\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"iff.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m.pow n * m \[LeftRightArrow] p \
\[Divides] m.pow n \[Or] p \[Divides] m\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"nat.prime.dvd_mul\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m \[RightArrow] p \[Divides] \
m\"\>"},
                    {"ID", "14"},
                    {"Rule", "\<\"id\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {Rule, 
                    "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]},
                {
                 TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "h : p \[Divides] m ^ n"}, {$CellContext`ID, 
       4}, {Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 19}, {
      Rule, "nat.rec"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 3}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 
       20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 
              19}, {Rule, "nat.rec"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 
              3}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {n : \:2115}, nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 22}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "p : \:2115"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {m n : \:2115}, nat.prime p \[RightArrow] p \[Divides] m ^ \
n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 23}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] {n : \:2115}, nat.prime p \[RightArrow] p \[Divides] \
m ^ n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 22}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 21}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n \[Or] p \[Divides] m"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m.pow n * m \[LeftRightArrow] p \[Divides] \
m.pow n \[Or] p \[Divides] m"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{{3.8051720145217133`*^9, 3.805172098252865*^9}, 
   3.8051721396762123`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"feed4d5f-2001-450e-8d24-c14453cbf23e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"p", ",", "\"\<nat.prime.not_coprime_iff_dvd\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.805172154373012*^9, 3.805172177963478*^9}, {
  3.805172812220764*^9, 3.8051728195506363`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"3739a398-32eb-40bf-9968-8ee78a5000ed"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] {m n : \:2115}, \[Not]m.coprime n \
\[LeftRightArrow] \[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
    {"ID", "28"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"m : \:2115\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {n : \:2115}, \[Not]m.coprime n \
\[LeftRightArrow] \[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "27"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Not]m.coprime n \[LeftRightArrow] \
\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \[And] p \[Divides] \
n\"\>"},
                    {"ID", "26"},
                    {"Rule", "\<\"iff.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Not]m.coprime n \[RightArrow] (\[Exists] \
(p : \:2115), nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n)\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : \[Not]m.coprime n\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "11"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime (m.gcd n).min_fac \[And] (m.gcd \
n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \[Divides] n\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"and.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"nat.prime (m.gcd n).min_fac\"\>"},
                    {"ID", "3"},
                    {"Rule", "\<\"nat.min_fac_prime\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : \[Not]m.coprime n\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(m.gcd n).min_fac \[Divides] m \[And] (m.gcd \
n).min_fac \[Divides] n\"\>"},
                    {"ID", "9"},
                    {"Rule", "\<\"and.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(m.gcd n).min_fac \[Divides] m\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"dvd.trans\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(m.gcd n).min_fac \[Divides] m.gcd n\"\>"},
                    {"ID", "4"},
                    {"Rule", "\<\"nat.min_fac_dvd\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m.gcd n \[Divides] m\"\>"},
                    {"ID", "5"},
                    {"Rule", "\<\"nat.gcd_dvd_left\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {Rule, 
                    "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(m.gcd n).min_fac \[Divides] n\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"dvd.trans\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(m.gcd n).min_fac \[Divides] m.gcd n\"\>"},
                    {"ID", "4"},
                    {"Rule", "\<\"nat.min_fac_dvd\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m.gcd n \[Divides] n\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"nat.gcd_dvd_right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {Rule, 
                    "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 
                    6}, {Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {Rule, 
                    "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 
                    8}, {Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {Rule, 
                    "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {Rule, 
                    "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {Rule, 
                    "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {Rule, 
                    "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {Rule, 
                    "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n"}, {$CellContext`ID, 11}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {
                    Rule, "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {
                    Rule, "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                   {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(\[Exists] (p : \:2115), nat.prime p \[And] \
p \[Divides] m \[And] p \[Divides] n) \[RightArrow] \[Not]m.coprime n\"\>"},
                    {"ID", "25"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h : \[Exists] (p : \:2115), nat.prime p \
\[And] p \[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "13"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]m.coprime n\"\>"},
                    {"ID", "24"},
                    {"Rule", "\<\"Exists.dcases_on\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h : \[Exists] (p : \:2115), nat.prime p \
\[And] p \[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "13"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n\"\>"},
                    {"ID", "23"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n \[RightArrow] \[Not]m.coprime n\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"hp : nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]m.coprime n\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"nat.not_coprime_of_dvd_of_dvd\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"1 < p\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"nat.prime.one_lt\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"nat.prime p\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"and.left\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"hp : nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"and.left\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"and.right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"hp : nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] n\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"and.right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m \[And] p \[Divides] n\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"and.right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"hp : nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, 
                    "Rows" -> {{True}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {Rule, 
                    "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {Rule, 
                    "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : \[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "\[Not]m.coprime n"}, {$CellContext`ID, 
              24}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "\[Not]m.coprime n \[RightArrow] (\[Exists] (p : \:2115), nat.prime p \
\[And] p \[Divides] m \[And] p \[Divides] n)"}, {$CellContext`ID, 12}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n"}, {$CellContext`ID, 11}, {
             Rule, "Exists.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {
                    Rule, "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {
                    Rule, "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "(\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n) \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 25}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : \[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "\[Not]m.coprime n"}, {$CellContext`ID, 
              24}, {Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Not]m.coprime n \[LeftRightArrow] \[Exists] (p : \:2115), nat.prime \
p \[And] p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 26}, {
      Rule, "iff.intro"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "\[Not]m.coprime n \[RightArrow] (\[Exists] (p : \:2115), \
nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n)"}, {$CellContext`ID, 
              12}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n"}, {$CellContext`ID, 11}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {
                    Rule, "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {
                    Rule, "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "(\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] m \
\[And] p \[Divides] n) \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
              25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 24}, {
                    Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {n : \:2115}, \[Not]m.coprime n \[LeftRightArrow] \[Exists] \
(p : \:2115), nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n"}, \
{$CellContext`ID, 27}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Not]m.coprime n \[LeftRightArrow] \[Exists] (p : \:2115), \
nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 
              26}, {Rule, "iff.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n \[RightArrow] (\[Exists] (p : \:2115), \
nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n)"}, {$CellContext`ID, 
                    12}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n"}, {$CellContext`ID, 11}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac \[And] (m.gcd n).min_fac \
\[Divides] m \[And] (m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 10}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (m.gcd n).min_fac"}, {$CellContext`ID, 3}, {
                    Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Not]m.coprime n"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m \[And] (m.gcd n).min_fac \
\[Divides] n"}, {$CellContext`ID, 9}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m"}, {$CellContext`ID, 6}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] m"}, {$CellContext`ID, 5}, {
                    Rule, "nat.gcd_dvd_left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] n"}, {$CellContext`ID, 8}, {
                    Rule, "dvd.trans"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(m.gcd n).min_fac \[Divides] m.gcd n"}, {$CellContext`ID,
                     4}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "m.gcd n \[Divides] n"}, {$CellContext`ID, 7}, {
                    Rule, "nat.gcd_dvd_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "(\[Exists] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n) \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 24}, {
                    Rule, "Exists.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : \[Exists] (p : \:2115), nat.prime p \[And] p \
\[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID, 13}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (p : \:2115), nat.prime p \[And] p \[Divides] \
m \[And] p \[Divides] n \[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 
                    23}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p \[And] p \[Divides] m \[And] p \[Divides] n \
\[RightArrow] \[Not]m.coprime n"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]m.coprime n"}, {$CellContext`ID, 21}, {
                    Rule, "nat.not_coprime_of_dvd_of_dvd"}, \
{$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "1 < p"}, {$CellContext`ID, 
                    17}, {Rule, "nat.prime.one_lt"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime p"}, {$CellContext`ID, 16}, {Rule, 
                    "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "and.left"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] n"}, {$CellContext`ID, 20}, {
                    Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[And] p \[Divides] n"}, {$CellContext`ID,
                     18}, {Rule, "and.right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "hp : nat.prime p \[And] p \[Divides] m \[And] p \
\[Divides] n"}, {$CellContext`ID, 15}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{{3.805172180019786*^9, 3.8051722284788218`*^9}, {
   3.8051722690850353`*^9, 3.80517227028596*^9}, {3.805172325697497*^9, 
   3.805172334328991*^9}, {3.805172649981884*^9, 3.80517265148253*^9}, 
   3.805172820773568*^9, {3.805172852484074*^9, 3.8051729071703176`*^9}, {
   3.80517298094654*^9, 3.805173030901134*^9}, {3.8051730914996853`*^9, 
   3.805173101566383*^9}, {3.8051731534668703`*^9, 3.80517317925458*^9}, 
   3.8051732363672237`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"bf53aa30-f5e1-4134-b3c4-e97eac074050"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"p", ",", "\"\<nat.exists_infinite_primes\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8051722464952593`*^9, 3.805172276656609*^9}, {
  3.805172356599527*^9, 3.805172357037291*^9}, {3.8051725811124163`*^9, 
  3.805172581744677*^9}, {3.805173242262375*^9, 3.805173252998361*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5afad108-4531-4842-ad18-1537188da0e1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] (n : \:2115), \[Exists] (p : \:2115), n \
\[LessEqual] p \[And] nat.prime p\"\>"},
    {"ID", "31"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), n \[LessEqual] p \
\[And] nat.prime p\"\>"},
                    {"ID", "30"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"n.fact + 1 \[NotEqual] 1 \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)\"\>"},
                    {"ID", "26"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"f1 : n.fact + 1 \[NotEqual] 1\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), n \[LessEqual] p \
\[And] nat.prime p\"\>"},
                    {"ID", "25"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime (n.fact + 1).min_fac \[RightArrow] \
(\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)\"\>"},
                    {"ID", "23"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime (n.fact + 1).min_fac\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), n \[LessEqual] p \
\[And] nat.prime p\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"n \[LessEqual] (n.fact + 1).min_fac \
\[RightArrow] (\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)\"\
\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"np : n \[LessEqual] (n.fact + \
1).min_fac\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (p : \:2115), n \[LessEqual] p \
\[And] nat.prime p\"\>"},
                    {"ID", "5"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"n \[LessEqual] (n.fact + 1).min_fac \[And] \
nat.prime (n.fact + 1).min_fac\"\>"},
                    {"ID", "4"},
                    {"Rule", "\<\"and.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"np : n \[LessEqual] (n.fact + \
1).min_fac\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime (n.fact + 1).min_fac\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n \[LessEqual] (n.fact + 1).min_fac\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"le_of_not_ge\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"n \[GreaterEqual] (n.fact + 1).min_fac \
\[RightArrow] false\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h : n \[GreaterEqual] (n.fact + 1).min_fac\"\
\>"},
                    {"ID", "7"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(n.fact + 1).min_fac \[Divides] n.fact \
\[RightArrow] false\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h\:2081 : (n.fact + 1).min_fac \[Divides] \
n.fact\"\>"},
                    {"ID", "8"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, 
                    "Rows" -> {{True}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "15"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(n.fact + 1).min_fac \[Divides] 1 \
\[RightArrow] false\"\>"},
                    {"ID", "11"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h\:2082 : (n.fact + 1).min_fac \[Divides] \
1\"\>"},
                    {"ID", "9"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"nat.prime.not_dvd_one\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime (n.fact + 1).min_fac\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h\:2082 : (n.fact + 1).min_fac \[Divides] \
1\"\>"},
                    {"ID", "9"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(n.fact + 1).min_fac \[Divides] 1\"\>"},
                    {"ID", "14"},
                    {"Rule", "\<\"iff.mpr\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(n.fact + 1).min_fac \[Divides] 1 \
\[LeftRightArrow] (n.fact + 1).min_fac \[Divides] n.fact + 1\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"nat.dvd_add_iff_right\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h\:2081 : (n.fact + 1).min_fac \[Divides] \
n.fact\"\>"},
                    {"ID", "8"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(n.fact + 1).min_fac \[Divides] n.fact + 1\"\
\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"nat.min_fac_dvd\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"(n.fact + 1).min_fac \[Divides] n.fact\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"nat.dvd_fact\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"0 < (n.fact + 1).min_fac\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"nat.min_fac_pos\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"h : n \[GreaterEqual] (n.fact + 1).min_fac\"\
\>"},
                    {"ID", "7"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] false"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\[Exists] (p : \
\:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 6}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "np : n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
              3}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, 
              "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 5}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 21}, {
      Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] false"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 2}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 22}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\[Exists] \
(p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 6}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 21}, {
             Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]},
{
 TagBox[GridBox[{
    {"Goal", "\<\"nat.prime (n.fact + 1).min_fac\"\>"},
    {"ID", "24"},
    {"Rule", "\<\"nat.min_fac_prime\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"f1 : n.fact + 1 \[NotEqual] 1\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Arguments, 
          Column[{
            
            Grid[{{$CellContext`Goal, 
               "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
              Rule, $CellContext`Assumption}}, Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
       DynamicModuleValues:>Automatic],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "nat.prime (n.fact + 1).min_fac \[RightArrow] (\[Exists] (p : \:2115), \
n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 23}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 22}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, \
{$CellContext`ID, 6}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    21}, {Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 24}, {
      Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "nat.prime (n.fact + 1).min_fac \[RightArrow] (\[Exists] (p : \
\:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 23}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, \
{$CellContext`ID, 6}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {
                    Rule, "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    21}, {Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {
                    Rule, "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 24}, {
             Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]},
{
 TagBox[GridBox[{
    {"Goal", "\<\"n.fact + 1 \[NotEqual] 1\"\>"},
    {"ID", "29"},
    {"Rule", "\<\"ne_of_gt\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"1 < n.fact.succ\"\>"},
                    {"ID", "28"},
                    {"Rule", "\<\"nat.succ_lt_succ\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"0 < n.fact\"\>"},
                    {"ID", "27"},
                    {"Rule", "\<\"nat.fact_pos\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "0 < n.fact"}, {$CellContext`ID,
                     27}, {Rule, "nat.fact_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Arguments, 
          Column[{
            
            Grid[{{$CellContext`Goal, "1 < n.fact.succ"}, {$CellContext`ID, 
               28}, {Rule, "nat.succ_lt_succ"}, {$CellContext`Proofs, 
               OpenerView[{$CellContext`Arguments, 
                 Column[{
                   
                   Grid[{{$CellContext`Goal, "0 < n.fact"}, {$CellContext`ID, 
                    27}, {Rule, "nat.fact_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
             Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
       DynamicModuleValues:>Automatic],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "n.fact + 1 \[NotEqual] 1 \[RightArrow] (\[Exists] (p : \:2115), n \
\[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 26}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, 
              "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "nat.prime (n.fact + 1).min_fac \[RightArrow] (\[Exists] \
(p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 23}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, \
{$CellContext`ID, 6}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    21}, {Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    24}, {Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 
       29}, {Rule, "ne_of_gt"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "1 < n.fact.succ"}, {$CellContext`ID, 
              28}, {Rule, "nat.succ_lt_succ"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, "0 < n.fact"}, {$CellContext`ID, 
                    27}, {Rule, "nat.fact_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p"}, \
{$CellContext`ID, 30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "n.fact + 1 \[NotEqual] 1 \[RightArrow] (\[Exists] (p : \
\:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 26}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 25}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (n.fact + 1).min_fac \[RightArrow] (\[Exists] \
(p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, {$CellContext`ID, 23}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 22}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[RightArrow] (\
\[Exists] (p : \:2115), n \[LessEqual] p \[And] nat.prime p)"}, \
{$CellContext`ID, 6}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (p : \:2115), n \[LessEqual] p \[And] \
nat.prime p"}, {$CellContext`ID, 5}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac \[And] nat.prime \
(n.fact + 1).min_fac"}, {$CellContext`ID, 4}, {Rule, 
                    "and.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "np : n \[LessEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[LessEqual] (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    21}, {Rule, "le_of_not_ge"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "n \[GreaterEqual] (n.fact + 1).min_fac \[RightArrow] \
false"}, {$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    19}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact \[RightArrow] \
false"}, {$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    15}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[RightArrow] false"}, \
{$CellContext`ID, 11}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    10}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2082 : (n.fact + 1).min_fac \[Divides] 1"}, \
{$CellContext`ID, 9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1"}, {$CellContext`ID, 
                    14}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] 1 \[LeftRightArrow] \
(n.fact + 1).min_fac \[Divides] n.fact + 1"}, {$CellContext`ID, 12}, {Rule, 
                    "nat.dvd_add_iff_right"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h\:2081 : (n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 8}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact + 1"}, \
{$CellContext`ID, 13}, {Rule, "nat.min_fac_dvd"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "(n.fact + 1).min_fac \[Divides] n.fact"}, \
{$CellContext`ID, 18}, {Rule, "nat.dvd_fact"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "0 < (n.fact + 1).min_fac"}, {$CellContext`ID, 17}, {
                    Rule, "nat.min_fac_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : n \[GreaterEqual] (n.fact + 1).min_fac"}, \
{$CellContext`ID, 7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "nat.prime (n.fact + 1).min_fac"}, {$CellContext`ID, 
                    24}, {Rule, "nat.min_fac_prime"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "f1 : n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "n.fact + 1 \[NotEqual] 1"}, {$CellContext`ID, 29}, {
             Rule, "ne_of_gt"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "1 < n.fact.succ"}, {$CellContext`ID, 28}, {
                    Rule, "nat.succ_lt_succ"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "0 < n.fact"}, {$CellContext`ID,
                     27}, {Rule, "nat.fact_pos"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{{3.8051722567053556`*^9, 3.805172278076872*^9}, 
   3.805172358100409*^9, 3.8051725830101643`*^9, 3.805173254693904*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"679c8c7a-764f-42ae-adcb-c75c1c052de4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"p", ",", "\"\<Set.singleton_inj\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8051732958249598`*^9, 3.8051732992662487`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"53c0faa5-8781-4294-8565-61bc9270e50b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] {x y : Set}, {x} = {y} \[RightArrow] x = y\"\>"},
    {"ID", "14"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"x : Set\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {y : Set}, {x} = {y} \[RightArrow] \
x = y\"\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"y : Set\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"{x} = {y} \[RightArrow] x = y\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"H : {x} = {y}\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = y\"\>"},
                    {"ID", "11"},
                    {"Rule", "\<\"eq.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = {y}.Union = (x = y)\"\>"},
                    {"ID", "5"},
                    {"Rule", "\<\"eq.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = {y}.Union = (x = {y}.Union)\"\>"},
                    {"ID", "3"},
                    {"Rule", "\<\"eq.refl\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"{y}.Union = y\"\>"},
                    {"ID", "4"},
                    {"Rule", "\<\"Set.Union_singleton\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = {y}.Union\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"eq.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"{x}.Union = {y}.Union = (x = {y}.Union)\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"eq.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"{x}.Union = {y}.Union = ({x}.Union = \
{y}.Union)\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"eq.refl\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"{x}.Union = x\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"Set.Union_singleton\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"{x}.Union = {y}.Union\"\>"},
                    {"ID", "9"},
                    {"Rule", "\<\"congr_arg\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"H : {x} = {y}\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {Rule, 
                    "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = y)"}, {$CellContext`ID, 5}, {
                    Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union"}, {$CellContext`ID, 10}, {Rule, 
                    "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {Rule, 
                    "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "x = y"}, {$CellContext`ID, 
                    11}, {Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = y)"}, {$CellContext`ID, 5}, {
                    Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union"}, {$CellContext`ID, 10}, {
                    Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {Rule, 
                    "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {
                    Rule, "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "y : Set"}, {$CellContext`ID, 
                    1}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x} = {y} \[RightArrow] x = y"}, {$CellContext`ID, 12}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "x = y"}, {$CellContext`ID, 
                    11}, {Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = y)"}, {$CellContext`ID, 5}, {
                    Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {
                    Rule, "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union"}, {$CellContext`ID, 10}, {
                    Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {
                    Rule, "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {
                    Rule, "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Left}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              ImageMargins->0]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
          Dynamic[Typeset`var$$],
          Alignment->Automatic,
          BaseStyle->{},
          BaselinePosition->Baseline,
          DefaultBaseStyle->"OpenerView",
          ImageMargins->0,
          ImageSize->Automatic],
         Deployed->False,
         StripOnInput->False],
        OpenerView[{$CellContext`Arguments, 
          Column[{
            
            Grid[{{$CellContext`Goal, "x : Set"}, {$CellContext`ID, 0}, {
              Rule, $CellContext`Assumption}}, Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
            
            Grid[{{$CellContext`Goal, 
               
               "\[ForAll] {y : Set}, {x} = {y} \[RightArrow] x = y"}, \
{$CellContext`ID, 13}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
               OpenerView[{$CellContext`Arguments, 
                 Column[{
                   
                   Grid[{{$CellContext`Goal, "y : Set"}, {$CellContext`ID, 
                    1}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                   
                   Grid[{{$CellContext`Goal, 
                    "{x} = {y} \[RightArrow] x = y"}, {$CellContext`ID, 12}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "x = y"}, {$CellContext`ID, 
                    11}, {Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = y)"}, {$CellContext`ID, 5}, {
                    Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union = (x = {y}.Union)"}, {$CellContext`ID, 
                    3}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{y}.Union = y"}, {$CellContext`ID, 4}, {
                    Rule, "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = {y}.Union"}, {$CellContext`ID, 10}, {
                    Rule, "eq.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = (x = {y}.Union)"}, \
{$CellContext`ID, 8}, {Rule, "eq.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union = ({x}.Union = {y}.Union)"}, \
{$CellContext`ID, 6}, {Rule, "eq.refl"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = x"}, {$CellContext`ID, 7}, {
                    Rule, "Set.Union_singleton"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "{x}.Union = {y}.Union"}, {$CellContext`ID, 9}, {
                    Rule, "congr_arg"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "H : {x} = {y}"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
             Background -> {{
                RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
       DynamicModuleValues:>{}],
      Setting[#, {0}]& ]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {
       RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.805173300788159*^9, 3.805173375920679*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"758c96b2-4204-475a-a2c8-62418654b857"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLeanProof", "[", 
  RowBox[{"p", ",", "\"\<Set.regularity\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.805173270287466*^9, 3.8051732803391743`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"54fc49ce-f26f-4fbc-ba8e-42b2489df1ef"],

Cell[BoxData[
 TagBox[GridBox[{
    {"Goal", "\<\"\[ForAll] (x : Set), x \[NotEqual] \[EmptySet] \
\[RightArrow] (\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet])\"\>"},
    {"ID", "42"},
    {"Rule", "\<\"\[ForAll]I\"\>"},
    {"Proofs", 
     TagBox[
      DynamicModuleBox[{Typeset`var$$ = False}, 
       InterpretationBox[
        StyleBox[
         PaneSelectorBox[{False->GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
          GridBox[{
            {
             OpenerBox[Dynamic[Typeset`var$$],
              Appearance->Automatic,
              AutoAction->False,
              ContinuousAction->False,
              Enabled->Automatic], "Arguments"},
            {"", 
             PaneBox[
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {"Goal", "\<\"x : Set\"\>"},
                    {"ID", "0"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]},
                 {
                  TagBox[GridBox[{
                    {
                    "Goal", "\<\"x \[NotEqual] \[EmptySet] \[RightArrow] (\
\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \[EmptySet])\"\>"},
                    {"ID", "41"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : x \[NotEqual] \[EmptySet]\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]\"\>"},
                    {"ID", "40"},
                    {"Rule", "\<\"classical.by_contradiction\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(\[Not]\[Exists] (y : Set) (H : y \[Element] \
x), x \:2229 y = \[EmptySet]) \[RightArrow] false\"\>"},
                    {"ID", "39"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"ne : \[Not]\[Exists] (y : Set) (H : y \
\[Element] x), x \:2229 y = \[EmptySet]\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "38"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
                    True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : x \[NotEqual] \[EmptySet]\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x = \[EmptySet]\"\>"},
                    {"ID", "37"},
                    {"Rule", "\<\"iff.mpr\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"x = \[EmptySet] \[LeftRightArrow] \[ForAll] \
(y : Set), y \[NotElement] x\"\>"},
                    {"ID", "3"},
                    {"Rule", "\<\"Set.eq_empty\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[ForAll] (y : Set), y \[NotElement] x\"\>"},
                    {"ID", "36"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"y \[NotElement] x\"\>"},
                    {"ID", "35"},
                    {"Rule", "\<\"Set.induction_on\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (z : Set), (\[ForAll] (w : Set), w \
\[Element] z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x\
\"\>"},
                    {"ID", "34"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(\[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x\"\>"},
                    {"ID", "33"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : \[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x\"\>"},
                    {"ID", "6"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"z \[NotElement] x\"\>"},
                    {"ID", "32"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"z \[NotElement] x \[RightArrow] z \
\[NotElement] x\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"this : z \[NotElement] x\"\>"},
                    {"ID", "7"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"this : z \[NotElement] x\"\>"},
                    {"ID", "7"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"z \[Element] x \[RightArrow] false\"\>"},
                    {"ID", "31"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"zx : z \[Element] x\"\>"},
                    {"ID", "9"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "30"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"ne : \[Not]\[Exists] (y : Set) (H : y \
\[Element] x), x \:2229 y = \[EmptySet]\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]\"\>"},
                    {"ID", "29"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]\"\>"},
                    {"ID", "28"},
                    {"Rule", "\<\"Exists.intro\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"zx : z \[Element] x\"\>"},
                    {"ID", "9"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"x \:2229 z = \[EmptySet]\"\>"},
                    {"ID", "27"},
                    {"Rule", "\<\"iff.mpr\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"x \:2229 z = \[EmptySet] \[LeftRightArrow] \
\[ForAll] (y : Set), y \[NotElement] x \:2229 z\"\>"},
                    {"ID", "10"},
                    {"Rule", "\<\"Set.eq_empty\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false\"\>"},
                    {"ID", "26"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"w \[Element] x \:2229 z \[RightArrow] \
false\"\>"},
                    {"ID", "25"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"wxz : w \[Element] x \:2229 z\"\>"},
                    {"ID", "12"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "24"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"w \[Element] x \[And] w \[Element] z \
\[RightArrow] false\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"_a : w \[Element] x \[And] w \[Element] \
z\"\>"},
                    {"ID", "13"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"and.dcases_on\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"_a : w \[Element] x \[And] w \[Element] \
z\"\>"},
                    {"ID", "13"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"left : w \[Element] x\"\>"},
                    {"ID", "14"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"w \[Element] z \[RightArrow] false\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"right : w \[Element] z\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"id_rhs\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"false\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]E\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : \[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x\"\>"},
                    {"ID", "6"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"right : w \[Element] z\"\>"},
                    {"ID", "15"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"left : w \[Element] x\"\>"},
                    {"ID", "14"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]},
                {
                 TagBox[GridBox[{
                    {"Goal", "\<\"w \[Element] x \[And] w \[Element] z\"\>"},
                    {"ID", "23"},
                    {"Rule", "\<\"iff.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
                    GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"w \[Element] x \:2229 z \[LeftRightArrow] w \
\[Element] x \[And] w \[Element] z\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"Set.mem_inter\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"wxz : w \[Element] x \:2229 z\"\>"},
                    {"ID", "12"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \[And] w \[Element] z \[RightArrow] false"}, \
{$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 20}, {
                    Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID, 
              23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 24}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \[And] w \[Element] z \[RightArrow] false"}, \
{$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 20}, {
                    Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID, 
              23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "w \[Element] x \:2229 z \[RightArrow] false"}, {$CellContext`ID, 
       25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 24}, {
             Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
      Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{}]}]}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] (w : Set), w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 26}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 24}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
       27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : \
Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
             Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{}]}]}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (w : Set), w \[Element] x \:2229 z \[RightArrow] \
false"}, {$CellContext`ID, 26}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "\[Exists] (H : z \[Element] x), x \:2229 z = \[EmptySet]"}, \
{$CellContext`ID, 28}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "zx : z \[Element] x"}, {$CellContext`ID,
               9}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
             Rule, "iff.mpr"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 15}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {
                    Rule, "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 2}, {Rule, $CellContext`Assumption}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \[EmptySet]"}, \
{$CellContext`ID, 29}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (H : z \[Element] x), x \:2229 z = \[EmptySet]"}, \
{$CellContext`ID, 28}, {Rule, "Exists.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 14}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 30}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 \
y = \[EmptySet]"}, {$CellContext`ID, 2}, {Rule, $CellContext`Assumption}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {
             Rule, "Exists.intro"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, {$CellContext`ID,
        8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 31}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "zx : z \[Element] x"}, {$CellContext`ID,
               9}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 30}, {
             Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "z \[NotElement] x"}, {$CellContext`ID, 32}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 31}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 30}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \[NotElement] x) \
\[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "z \[NotElement] x"}, {$CellContext`ID, 
              32}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {
                    Rule, "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 12}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "y \[NotElement] x"}, {$CellContext`ID, 35}, {
      Rule, "Set.induction_on"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] z \
\[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
      Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{}]}]}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] (y : Set), y \[NotElement] x"}, {$CellContext`ID, 36}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "y \[NotElement] x"}, {$CellContext`ID, 
              35}, {Rule, "Set.induction_on"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "x = \[EmptySet]"}, {$CellContext`ID, 37}, {
      Rule, "iff.mpr"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              
              "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
             Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{}]}]}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (y : Set), y \[NotElement] x"}, {$CellContext`ID, 
              36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 27}, {Rule,
                     "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 2}, {Rule, $CellContext`Assumption}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 38}, {
      Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           Grid[{{$CellContext`Goal, "x = \[EmptySet]"}, {$CellContext`ID, 
              37}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (y : Set), y \[NotElement] x"}, \
{$CellContext`ID, 36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 9}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
                    27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "(\[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]) \[RightArrow] false"}, {$CellContext`ID, 39}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 \
y = \[EmptySet]"}, {$CellContext`ID, 2}, {Rule, $CellContext`Assumption}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 38}, {
             Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet]"}, {$CellContext`ID, 37}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (y : Set), y \[NotElement] x"}, \
{$CellContext`ID, 36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 7}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
                    27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, 
       "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \[EmptySet]"}, \
{$CellContext`ID, 40}, {
      Rule, "classical.by_contradiction"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "(\[Not]\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]) \[RightArrow] false"}, {$CellContext`ID, 39}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 38}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet]"}, {$CellContext`ID, 37}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (y : Set), y \[NotElement] x"}, \
{$CellContext`ID, 36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {
                    Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
                    27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{
 "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[Typeset`var$$],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "x : Set"}, {$CellContext`ID, 0}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "x \[NotEqual] \[EmptySet] \[RightArrow] (\[Exists] (y : Set) (H : y \
\[Element] x), x \:2229 y = \[EmptySet])"}, {$CellContext`ID, 41}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 40}, {
             Rule, "classical.by_contradiction"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(\[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]) \[RightArrow] false"}, {$CellContext`ID, 39}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 2}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    38}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : x \[NotEqual] \[EmptySet]"}, {$CellContext`ID, 1}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet]"}, {$CellContext`ID, 37}, {
                    Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x = \[EmptySet] \[LeftRightArrow] \[ForAll] (y : Set), y \
\[NotElement] x"}, {$CellContext`ID, 3}, {
                    Rule, "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (y : Set), y \[NotElement] x"}, \
{$CellContext`ID, 36}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "y \[NotElement] x"}, {$CellContext`ID, 35}, {
                    Rule, "Set.induction_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (z : Set), (\[ForAll] (w : Set), w \[Element] \
z \[RightArrow] w \[NotElement] x) \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 34}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(\[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x) \[RightArrow] z \[NotElement] x"}, {$CellContext`ID, 33}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x"}, {$CellContext`ID, 32}, {Rule, 
                    "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[NotElement] x \[RightArrow] z \[NotElement] x"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "this : z \[NotElement] x"}, {$CellContext`ID, 
                    7}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "z \[Element] x \[RightArrow] false"}, {$CellContext`ID, 
                    31}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    30}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "ne : \[Not]\[Exists] (y : Set) (H : y \[Element] x), x \
\:2229 y = \[EmptySet]"}, {$CellContext`ID, 
                    2}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (y : Set) (H : y \[Element] x), x \:2229 y = \
\[EmptySet]"}, {$CellContext`ID, 29}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Exists] (H : z \[Element] x), x \:2229 z = \
\[EmptySet]"}, {$CellContext`ID, 28}, {Rule, 
                    "Exists.intro"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "zx : z \[Element] x"}, {$CellContext`ID, 
                    9}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet]"}, {$CellContext`ID, 
                    27}, {Rule, "iff.mpr"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "x \:2229 z = \[EmptySet] \[LeftRightArrow] \[ForAll] (y \
: Set), y \[NotElement] x \:2229 z"}, {$CellContext`ID, 10}, {Rule, 
                    "Set.eq_empty"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (w : Set), w \[Element] x \:2229 z \
\[RightArrow] false"}, {$CellContext`ID, 26}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[RightArrow] false"}, \
{$CellContext`ID, 25}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    24}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z \[RightArrow] \
false"}, {$CellContext`ID, 21}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    20}, {Rule, "and.dcases_on"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "_a : w \[Element] x \[And] w \[Element] z"}, \
{$CellContext`ID, 13}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[RightArrow] w \[Element] z \
\[RightArrow] false"}, {$CellContext`ID, 19}, {Rule, 
                    "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] z \[RightArrow] false"}, {$CellContext`ID, 
                    18}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    17}, {Rule, "id_rhs"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, "false"}, {$CellContext`ID, 
                    16}, {Rule, "\[ForAll]E"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "IH : \[ForAll] (w : Set), w \[Element] z \[RightArrow] w \
\[NotElement] x"}, {$CellContext`ID, 6}, {Rule, $CellContext`Assumption}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "right : w \[Element] z"}, {$CellContext`ID, 
                    15}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "left : w \[Element] x"}, {$CellContext`ID, 
                    14}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \[And] w \[Element] z"}, {$CellContext`ID,
                     23}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "w \[Element] x \:2229 z \[LeftRightArrow] w \[Element] x \
\[And] w \[Element] z"}, {$CellContext`ID, 22}, {Rule, 
                    "Set.mem_inter"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "wxz : w \[Element] x \:2229 z"}, {$CellContext`ID, 
                    12}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                 Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
          Background -> {{
             RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
   Background -> {{
      RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, Background -> {{
   RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]], "Output",
 CellChangeTimes->{3.805173282017164*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"1751a70c-2ba9-43f9-a191-3ee691b5c1f8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"QuitLeanMode", "[", "p", "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"74feae36-5665-4e87-ae08-27945938bd89"]
},
WindowSize->{1850, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 262, 7, 31, "Input",ExpressionUUID->"162b0d4a-2c45-4677-8210-902b773d4ccd"],
Cell[823, 29, 334, 7, 31, "Input",ExpressionUUID->"90b5dffd-6085-4ae5-a8b1-fb46c820ea5c"],
Cell[1160, 38, 329, 9, 31, "Input",ExpressionUUID->"6677c453-64a6-4f46-98c5-59de4101cd22"],
Cell[CellGroupData[{
Cell[1514, 51, 622, 9, 31, "Input",ExpressionUUID->"0e600f33-c4d8-43ae-953b-4166b2dbe04e"],
Cell[2139, 62, 285, 3, 35, "Output",ExpressionUUID->"98577f59-ce79-466a-9b1e-160beea5ba33"]
}, Open  ]],
Cell[2439, 68, 220, 4, 31, "Input",ExpressionUUID->"3d3c020a-c399-4ac9-850b-6a200b89dac3"],
Cell[2662, 74, 627, 10, 31, "Input",ExpressionUUID->"bff7d237-7b23-4503-8ea8-a38367ef8b1f"],
Cell[CellGroupData[{
Cell[3314, 88, 144, 2, 31, "Input",ExpressionUUID->"a09aad19-bd35-49e2-b90b-28d31c8cc39d"],
Cell[3461, 92, 494, 7, 35, "Output",ExpressionUUID->"d95a9744-3a76-4e83-b9a2-2fd03fb68126"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3992, 104, 761, 14, 31, "Input",ExpressionUUID->"6eaa36ad-102d-410f-941e-29b4e97398c5"],
Cell[4756, 120, 124885, 2662, 137, "Output",ExpressionUUID->"feed4d5f-2001-450e-8d24-c14453cbf23e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129678, 2787, 322, 6, 31, "Input",ExpressionUUID->"3739a398-32eb-40bf-9968-8ee78a5000ed"],
Cell[130003, 2795, 169285, 3590, 104, "Output",ExpressionUUID->"bf53aa30-f5e1-4134-b3c4-e97eac074050"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299325, 6390, 414, 6, 31, "Input",ExpressionUUID->"5afad108-4531-4842-ad18-1537188da0e1"],
Cell[299742, 6398, 188011, 3998, 104, "Output",ExpressionUUID->"679c8c7a-764f-42ae-adcb-c75c1c052de4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487790, 10401, 261, 4, 31, "Input",ExpressionUUID->"53c0faa5-8781-4294-8565-61bc9270e50b"],
Cell[488054, 10407, 63810, 1389, 104, "Output",ExpressionUUID->"758c96b2-4204-475a-a2c8-62418654b857"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551901, 11801, 256, 4, 31, "Input",ExpressionUUID->"54fc49ce-f26f-4fbc-ba8e-42b2489df1ef"],
Cell[552160, 11807, 328312, 6797, 104, "Output",ExpressionUUID->"1751a70c-2ba9-43f9-a191-3ee691b5c1f8"]
}, Open  ]],
Cell[880487, 18607, 144, 2, 31, "Input",ExpressionUUID->"74feae36-5665-4e87-ae08-27945938bd89"]
}
]
*)

